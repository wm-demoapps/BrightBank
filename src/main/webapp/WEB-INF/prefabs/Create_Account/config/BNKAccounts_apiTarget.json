{
  "basePath" : "${rest.BNKAccounts.basepath}",
  "paths" : {
    "/card-holder/info" : {
      "post" : {
        "summary" : "Returns the cards, fees and limits associated with a card holder.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardHolderInfo",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card management",
        "produces" : [ "application/json" ],
        "x-WM-OPERATION_TYPE" : "create",
        "operationId" : "BNKAccounts_postCardHolderInfo",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardHolderInfoResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "card_holder" : {
                  "type" : "object",
                  "properties" : {
                    "delivery_address" : {
                      "type" : "object"
                    },
                    "address" : {
                      "type" : "object"
                    },
                    "gender" : {
                      "minLength" : 1,
                      "description" : "Gender of individual",
                      "type" : "string",
                      "maxLength" : 1,
                      "enum" : [ "M", "F", "S", "X" ]
                    },
                    "date_of_birth" : {
                      "minLength" : 10,
                      "description" : "Date of birth of the individual, formatted yyyy-mm-dd.",
                      "type" : "string",
                      "maxLength" : 10
                    },
                    "mobile_no" : {
                      "minLength" : 1,
                      "description" : "Mandatory for 3D- Secure e-commerce payments. Mobile number of the individual.",
                      "type" : "string",
                      "maxLength" : 20
                    },
                    "last_name" : {
                      "minLength" : 1,
                      "description" : "Contact Last Name or Department",
                      "type" : "string",
                      "maxLength" : 50
                    },
                    "language" : {
                      "minLength" : 2,
                      "description" : "The communication language requested by the consumer following ISO 639-1 language code. E.g. en - English.",
                      "type" : "string",
                      "maxLength" : 2
                    },
                    "tel_no" : {
                      "minLength" : 1,
                      "description" : "The primary household landline telephone number of the consumer.",
                      "type" : "string",
                      "maxLength" : 20
                    },
                    "tel_ext" : {
                      "minLength" : 1,
                      "description" : "Country Code extension for landline telephone number.",
                      "type" : "string",
                      "maxLength" : 5
                    },
                    "miduserid" : {
                      "minLength" : 39,
                      "description" : "Modirum User ID for 3D Secure SDK users",
                      "type" : "string",
                      "maxLength" : 39
                    },
                    "first_name" : {
                      "minLength" : 1,
                      "description" : "Contact First Name or Department",
                      "type" : "string",
                      "maxLength" : 50
                    },
                    "email" : {
                      "minLength" : 1,
                      "description" : "The email address of the individual.",
                      "type" : "string",
                      "maxLength" : 150
                    },
                    "mobile_ext" : {
                      "minLength" : 1,
                      "description" : "Country Code extension for mobile telephone number.",
                      "type" : "string",
                      "maxLength" : 5
                    },
                    "mobile_add" : {
                      "type" : "object",
                      "properties" : {
                        "mobile_no" : {
                          "minLength" : 1,
                          "description" : "Mandatory for 3D- Secure e-commerce payments. Mobile number of the individual.",
                          "type" : "string",
                          "maxLength" : 20
                        },
                        "mobile_ext" : {
                          "minLength" : 1,
                          "description" : "Country Code extension for mobile telephone number.",
                          "type" : "string",
                          "maxLength" : 5
                        }
                      }
                    }
                  }
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "limit_rules" : {
                  "type" : "object"
                },
                "card_infos" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "card_visible_number" : {
                        "minLength" : 11,
                        "description" : "Characters showing part of the PAN (first 4 characters * last 4 characters)",
                        "type" : "string",
                        "maxLength" : 11
                      },
                      "card_network" : {
                        "minLength" : 0,
                        "description" : "Card Netwrok provider, VISA or MASTERCARD",
                        "type" : "string",
                        "maxLength" : 50
                      },
                      "expiry_renew" : {
                        "format" : "int32",
                        "description" : " 0: do not renew at card expiration 1: automatic renewal at card expiration",
                        "type" : "integer"
                      },
                      "profile" : {
                        "minLength" : 1,
                        "description" : "Profile of limits, velocities, and fees of the virtual account. Not available on all packages.",
                        "type" : "string",
                        "maxLength" : 20
                      },
                      "card_sequence" : {
                        "minLength" : 3,
                        "description" : "If design of the card is asking for sequence, then a 3 digit number will be generated. This number is unique for any card of the card holder.",
                        "type" : "string",
                        "maxLength" : 3
                      },
                      "market_id" : {
                        "minLength" : 1,
                        "description" : "Market reference of the card.",
                        "type" : "string",
                        "maxLength" : 20
                      },
                      "card_client_code_prev" : {
                        "minLength" : 13,
                        "description" : "Reference id of the card",
                        "type" : "string",
                        "maxLength" : 13
                      },
                      "wallet_client_code" : {
                        "minLength" : 1,
                        "description" : "Code of the account to be used to authorise transactions against. The virtual account reference linked to the debit card. Not available on all the markets.",
                        "type" : "string",
                        "maxLength" : 20
                      },
                      "card_type" : {
                        "minLength" : 1,
                        "description" : "V (uppercase V) for virtual P (uppercase P) for physical",
                        "type" : "string",
                        "maxLength" : 1
                      },
                      "card_exp_date" : {
                        "minLength" : 10,
                        "description" : "The expiry date of the card (format yyyy-mm-dd).",
                        "type" : "string",
                        "maxLength" : 10
                      },
                      "deny_mcc" : {
                        "minLength" : 1,
                        "description" : "Comma separated list of MCC codes that should be denied. To define a range of MCC, separate the first and last MCC by a minus. Not available on all the markets",
                        "type" : "string",
                        "maxLength" : 192
                      },
                      "card_status" : {
                        "minLength" : 3,
                        "description" : "Status of the card.",
                        "type" : "string",
                        "maxLength" : 3,
                        "enum" : [ "ACT", "BLO", "LOS", "NEW", "STO", "DAM", "EXP", "CAN", "REA", "PRE", "CBL", "CMD", "ABO" ]
                      },
                      "card_line_4" : {
                        "minLength" : 1,
                        "description" : "Free text field. For line 4 variable data. A regular expression for control will put in place.",
                        "type" : "string",
                        "maxLength" : 30
                      },
                      "design_id" : {
                        "minLength" : 1,
                        "description" : "The card design reference of the card that is being created. The relevant designs will be provided by Bankable.",
                        "type" : "string",
                        "maxLength" : 20
                      },
                      "corporate_id" : {
                        "minLength" : 1,
                        "description" : "Corporate Identity. If set, the future virtual account will be attached to the corporate. Otherwise, it will be attached to the default coporate of the distributor. Every virtual account that gets created will be associated to a corporate Identity.",
                        "type" : "string",
                        "maxLength" : 20
                      },
                      "product_id" : {
                        "minLength" : 1,
                        "description" : "Product reference",
                        "type" : "string",
                        "maxLength" : 50
                      },
                      "card_name" : {
                        "minLength" : 1,
                        "description" : "The name to appear on the card. If omitted then the card name will be composed by: <first_name><><last_name> or if abbreviation is needed <first letter of first_name><><last_name>. The field length can vary depending on the card design and is also restricted to a maximum of 21 if the provider is Marqeta.",
                        "type" : "string",
                        "maxLength" : 27
                      },
                      "card_balance_type" : {
                        "minLength" : 6,
                        "description" : "Type: - CREDIT - DEBIT - PREPAID - PREPAID_MODEL_2",
                        "type" : "string",
                        "maxLength" : 15,
                        "enum" : [ "CREDIT", "DEBIT", "PREPAID", "PREPAID_MODEL_2" ]
                      },
                      "card_client_code" : {
                        "minLength" : 13,
                        "description" : "Reference id of the card",
                        "type" : "string",
                        "maxLength" : 13
                      },
                      "deny_service" : {
                        "minLength" : 1,
                        "description" : "Comma separated list of services (authorisation transaction types) that should be denied for the card: 0 - Sale (Goods & services) 1 - Cash 9 - Sale with cashback Not available on all markets",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "image_id" : {
                        "minLength" : 1,
                        "description" : "ID of a predefined image",
                        "type" : "string",
                        "maxLength" : 16
                      }
                    }
                  }
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "ch_client_code" : {
                  "minLength" : 1,
                  "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                  "type" : "string",
                  "maxLength" : 50
                }
              }
            },
            "description" : "Returned"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardHolderInfoRequest",
            "type" : "object",
            "required" : [ "ch_client_code", "entity_id" ],
            "properties" : {
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "ch_client_code" : {
                "minLength" : 1,
                "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                "type" : "string",
                "maxLength" : 50
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call retrieves all the details associated with a card holder.",
          "required" : true
        } ],
        "tags" : [ "card management" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card-holder/info",
      "parameters" : [ ]
    },
    "/test/inbound-payment" : {
      "post" : {
        "summary" : "Simulates a SWIFT Inbound-Payment and credits the funds into the account in relation to provided IBAN.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postTestInboundPayment",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.simulation",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postTestInboundPayment",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostTestInboundPaymentResponse",
              "type" : "object",
              "properties" : {
                "payment_id" : {
                  "format" : "int32",
                  "description" : "Payment ID in relation to the operation made.",
                  "type" : "integer"
                }
              }
            },
            "description" : "Inbound Payment Created"
          },
          "404" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_name" : {
                  "description" : "Response error name.",
                  "type" : "string"
                },
                "error_description" : {
                  "description" : "Response error description.",
                  "type" : "string"
                },
                "error_code" : {
                  "description" : "Response error code.",
                  "type" : "string"
                }
              }
            },
            "description" : "Invalid IBAN provided"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostTestInboundPaymentRequest",
            "type" : "object",
            "required" : [ "amount", "currency", "entity_id", "iban" ],
            "properties" : {
              "reference" : {
                "minLength" : 0,
                "description" : "Reference of the inbound payment.",
                "type" : "string",
                "maxLength" : 140
              },
              "amount" : {
                "minLength" : 1,
                "description" : "Maximum limit amount for the corporate. Decimal separator \".\" (point). Thousand separator; none.",
                "type" : "string",
                "maxLength" : 21
              },
              "iban" : {
                "minLength" : 0,
                "description" : "The International Bank Account Number.",
                "type" : "string",
                "maxLength" : 34
              },
              "currency" : {
                "minLength" : 3,
                "description" : "Currency. ISO 3 characters code.",
                "type" : "string",
                "maxLength" : 3
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call credits the funds to the account related to the provided IBAN and returns the related Payment Id.",
          "required" : true
        } ],
        "tags" : [ "simulation" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/test/inbound-payment",
      "parameters" : [ ]
    },
    "/consumer/create" : {
      "post" : {
        "summary" : "Create a consumer that can be linked to a card or a virtual account using the ch_client_code returned in the response message if a consumer has successfully been created.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postConsumerCreate",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.consumer",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postConsumerCreate",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostConsumerCreateResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "ch_client_code" : {
                  "minLength" : 1,
                  "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                  "type" : "string",
                  "maxLength" : 50
                }
              }
            },
            "description" : "Created"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostConsumerCreateRequest",
            "type" : "object",
            "required" : [ "address", "email", "entity_id", "first_name", "last_name" ],
            "properties" : {
              "address" : {
                "type" : "object"
              },
              "gender" : {
                "minLength" : 1,
                "description" : "Gender of individual",
                "type" : "string",
                "maxLength" : 1,
                "enum" : [ "M", "F", "S", "X" ]
              },
              "date_of_birth" : {
                "minLength" : 10,
                "description" : "Date of birth of the individual, formatted yyyy-mm-dd.",
                "type" : "string",
                "maxLength" : 10
              },
              "mobile_no" : {
                "minLength" : 1,
                "description" : "Mandatory for 3D- Secure e-commerce payments. Mobile number of the individual.",
                "type" : "string",
                "maxLength" : 20
              },
              "last_name" : {
                "minLength" : 1,
                "description" : "Contact Last Name or Department",
                "type" : "string",
                "maxLength" : 50
              },
              "language" : {
                "minLength" : 2,
                "description" : "The communication language requested by the consumer following ISO 639-1 language code. E.g. en - English.",
                "type" : "string",
                "maxLength" : 2
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "tel_no" : {
                "minLength" : 1,
                "description" : "The primary household landline telephone number of the consumer.",
                "type" : "string",
                "maxLength" : 20
              },
              "corporate_id" : {
                "minLength" : 1,
                "description" : "Corporate Identity. If set, the future virtual account will be attached to the corporate. Otherwise, it will be attached to the default coporate of the distributor. Every virtual account that gets created will be associated to a corporate Identity.",
                "type" : "string",
                "maxLength" : 20
              },
              "tel_ext" : {
                "minLength" : 1,
                "description" : "Country Code extension for landline telephone number.",
                "type" : "string",
                "maxLength" : 5
              },
              "first_name" : {
                "minLength" : 1,
                "description" : "Contact First Name or Department",
                "type" : "string",
                "maxLength" : 50
              },
              "email" : {
                "minLength" : 1,
                "description" : "The email address of the individual.",
                "type" : "string",
                "maxLength" : 150
              },
              "mobile_ext" : {
                "minLength" : 1,
                "description" : "Country Code extension for mobile telephone number.",
                "type" : "string",
                "maxLength" : 5
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call creates a consumer and reutrns ch_client_code.",
          "required" : true
        } ],
        "tags" : [ "consumer" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/consumer/create",
      "parameters" : [ ]
    },
    "/virtual-account/settled-statement" : {
      "post" : {
        "summary" : "List all settled transactions for a given period together with the opening and closing balance for that period.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postVirtualAccountSettledStatement",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.virtual accounts",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postVirtualAccountSettledStatement",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountSettledStatementResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "statement" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "metaData" : {
                        "type" : "object",
                        "properties" : {
                          "from_date_time" : {
                            "type" : "object"
                          },
                          "accountReference" : {
                            "minLength" : 1,
                            "description" : "Reference ID of the virtual account",
                            "type" : "string",
                            "maxLength" : 20
                          },
                          "nextPageToken" : {
                            "description" : "Token for accessing the next page of the statement",
                            "type" : "string"
                          },
                          "numTransactionsRequested" : {
                            "type" : "object"
                          },
                          "to_date_time" : {
                            "type" : "object"
                          }
                        }
                      },
                      "content" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "pendingStatementTransaction" : {
                              "type" : "object",
                              "properties" : {
                                "dateTime" : {
                                  "minLength" : 19,
                                  "description" : "Date and time, formatted yyyy-mm-dd hh:mm:ss.",
                                  "type" : "string",
                                  "maxLength" : 19
                                },
                                "country" : {
                                  "minLength" : 2,
                                  "description" : "Two-character ISO alphabetic code. Examples: FR / GB. If left blank, the country of the client will be used.",
                                  "type" : "string",
                                  "maxLength" : 2
                                },
                                "transactionCurrency" : {
                                  "minLength" : 3,
                                  "description" : "Currency. ISO 3 characters code.",
                                  "type" : "string",
                                  "maxLength" : 3
                                },
                                "scheme" : {
                                  "minLength" : 10,
                                  "description" : "This is the payment scheme that governs the processing of operations. For faster payments, the key will be \"FPS\".",
                                  "type" : "string",
                                  "maxLength" : 10
                                },
                                "pending" : {
                                  "type" : "object",
                                  "properties" : {
                                    "amount" : {
                                      "minLength" : 1,
                                      "description" : "Maximum limit amount for the corporate. Decimal separator \".\" (point). Thousand separator; none.",
                                      "type" : "string",
                                      "maxLength" : 21
                                    },
                                    "fees" : {
                                      "type" : "object",
                                      "properties" : {
                                        "fxFeeAmount" : {
                                          "minLength" : 1,
                                          "description" : "Amount of the FX fee.",
                                          "type" : "string",
                                          "maxLength" : 21
                                        },
                                        "atmFeeAmount" : {
                                          "description" : "The ATM fee amount settled in the account currency. ISO format currency amount. Number of decimal places is defined by the currency type may be between 0 and 4.",
                                          "type" : "string"
                                        },
                                        "otherFeeAmount" : {
                                          "description" : "The sum of all other fees settled in the account currency. ISO format currency amount. Number of decimal places is defined by the currency type may be between 0 and 4.",
                                          "type" : "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "merchant" : {
                                  "type" : "object",
                                  "properties" : {
                                    "code" : {
                                      "minLength" : 1,
                                      "description" : "Merchant Code",
                                      "type" : "string",
                                      "maxLength" : 15
                                    },
                                    "name" : {
                                      "minLength" : 1,
                                      "description" : "Merchant Name",
                                      "type" : "string",
                                      "maxLength" : 22
                                    },
                                    "categoryCode" : {
                                      "minLength" : 1,
                                      "description" : "Merchant Category Code",
                                      "type" : "string",
                                      "maxLength" : 4
                                    }
                                  }
                                },
                                "counterpartyAccountDetails" : {
                                  "type" : "object"
                                },
                                "type" : {
                                  "format" : "int32",
                                  "description" : "The type of the transaction: 0: Internal 1: Purchase 2: ATM Cash 3: Cashback 4: Offline Balance Collection 5: ATM Balance 6: Purchase Reversal 7: ATM Reversal 8: TopUp 9: Transfer 10: Adjustment 11: Refund 12: Reimbursment",
                                  "type" : "integer"
                                },
                                "reference" : {
                                  "type" : "object"
                                },
                                "ordererRef" : {
                                  "minLength" : 1,
                                  "description" : "External reference, assigned by the orderer, used to uniquely identify the order. This reference is transmitted throughout the entire payment circuit.",
                                  "type" : "string",
                                  "maxLength" : 35
                                },
                                "trn" : {
                                  "description" : "Transaction Reference Number",
                                  "type" : "string"
                                },
                                "digitalWallet" : {
                                  "type" : "object",
                                  "properties" : {
                                    "deviceType" : {
                                      "minLength" : 5,
                                      "description" : "The type of device into which the digital wallet token will be provisioned. Allowable values: MOBILE_PHONE, WATCH, TABLET",
                                      "type" : "string",
                                      "maxLength" : 12,
                                      "enum" : [ "MOBILE_PHONE", "WATCH", "TABLET" ]
                                    },
                                    "digitalWalletToken" : {
                                      "minLength" : 1,
                                      "description" : "Unique ID of the token",
                                      "type" : "string",
                                      "maxLength" : 36
                                    },
                                    "tokenRequestorName" : {
                                      "minLength" : 1,
                                      "description" : "Name of the token provider.",
                                      "type" : "string",
                                      "maxLength" : 50
                                    },
                                    "deviceName" : {
                                      "minLength" : 1,
                                      "description" : "Name of the device the token is linked to.",
                                      "type" : "string",
                                      "maxLength" : 50
                                    }
                                  }
                                },
                                "transactionAmount" : {
                                  "type" : "object"
                                },
                                "counterpartyBankAccountDetails" : {
                                  "description" : "Counterparty banking details. Mandatory for âPayment Transactionsâ.",
                                  "type" : "string"
                                },
                                "id" : {
                                  "minLength" : 1,
                                  "description" : "Unique id of the transaction. The transaction keeps this id all along its life. The other references can change depending on the status.",
                                  "type" : "string",
                                  "maxLength" : 20
                                },
                                "arn" : {
                                  "description" : "Acquirer Reference Number",
                                  "type" : "string"
                                }
                              }
                            },
                            "summary" : {
                              "type" : "object",
                              "properties" : {
                                "settledBalance" : {
                                  "type" : "object"
                                },
                                "pendingTransactionCount" : {
                                  "format" : "int32",
                                  "description" : "The number of pending transactions in the statement.",
                                  "type" : "integer"
                                },
                                "accountCurrency" : {
                                  "minLength" : 3,
                                  "description" : "Currency. ISO 3 characters code.",
                                  "type" : "string",
                                  "maxLength" : 3
                                },
                                "settledTransactionCount" : {
                                  "format" : "int32",
                                  "description" : "The number of settled transactions in the statement.",
                                  "type" : "integer"
                                },
                                "openingSettledBalance" : {
                                  "type" : "object"
                                },
                                "availableBalance" : {
                                  "type" : "object"
                                }
                              }
                            },
                            "settledStatementTransaction" : {
                              "type" : "object",
                              "properties" : {
                                "dateTime" : {
                                  "minLength" : 19,
                                  "description" : "Date and time, formatted yyyy-mm-dd hh:mm:ss.",
                                  "type" : "string",
                                  "maxLength" : 19
                                },
                                "country" : {
                                  "minLength" : 2,
                                  "description" : "Two-character ISO alphabetic code. Examples: FR / GB. If left blank, the country of the client will be used.",
                                  "type" : "string",
                                  "maxLength" : 2
                                },
                                "transactionCurrency" : {
                                  "minLength" : 3,
                                  "description" : "Currency. ISO 3 characters code.",
                                  "type" : "string",
                                  "maxLength" : 3
                                },
                                "scheme" : {
                                  "minLength" : 10,
                                  "description" : "This is the payment scheme that governs the processing of operations. For faster payments, the key will be \"FPS\".",
                                  "type" : "string",
                                  "maxLength" : 10
                                },
                                "merchant" : {
                                  "type" : "object",
                                  "properties" : {
                                    "code" : {
                                      "minLength" : 1,
                                      "description" : "Merchant Code",
                                      "type" : "string",
                                      "maxLength" : 15
                                    },
                                    "name" : {
                                      "minLength" : 1,
                                      "description" : "Merchant Name",
                                      "type" : "string",
                                      "maxLength" : 22
                                    },
                                    "categoryCode" : {
                                      "minLength" : 1,
                                      "description" : "Merchant Category Code",
                                      "type" : "string",
                                      "maxLength" : 4
                                    }
                                  }
                                },
                                "counterpartyAccountDetails" : {
                                  "type" : "object"
                                },
                                "type" : {
                                  "format" : "int32",
                                  "description" : "The type of the transaction: 0: Internal 1: Purchase 2: ATM Cash 3: Cashback 4: Offline Balance Collection 5: ATM Balance 6: Purchase Reversal 7: ATM Reversal 8: TopUp 9: Transfer 10: Adjustment 11: Refund 12: Reimbursment",
                                  "type" : "integer"
                                },
                                "settlement" : {
                                  "type" : "object",
                                  "properties" : {
                                    "dateTime" : {
                                      "minLength" : 19,
                                      "description" : "Date and time, formatted yyyy-mm-dd hh:mm:ss.",
                                      "type" : "string",
                                      "maxLength" : 19
                                    },
                                    "amount" : {
                                      "minLength" : 1,
                                      "description" : "Maximum limit amount for the corporate. Decimal separator \".\" (point). Thousand separator; none.",
                                      "type" : "string",
                                      "maxLength" : 21
                                    },
                                    "balanceAfter" : {
                                      "type" : "object"
                                    }
                                  }
                                },
                                "reference" : {
                                  "type" : "object"
                                },
                                "ordererRef" : {
                                  "minLength" : 1,
                                  "description" : "External reference, assigned by the orderer, used to uniquely identify the order. This reference is transmitted throughout the entire payment circuit.",
                                  "type" : "string",
                                  "maxLength" : 35
                                },
                                "trn" : {
                                  "description" : "Transaction Reference Number",
                                  "type" : "string"
                                },
                                "digitalWallet" : {
                                  "type" : "object",
                                  "properties" : {
                                    "deviceType" : {
                                      "minLength" : 5,
                                      "description" : "The type of device into which the digital wallet token will be provisioned. Allowable values: MOBILE_PHONE, WATCH, TABLET",
                                      "type" : "string",
                                      "maxLength" : 12,
                                      "enum" : [ "MOBILE_PHONE", "WATCH", "TABLET" ]
                                    },
                                    "digitalWalletToken" : {
                                      "minLength" : 1,
                                      "description" : "Unique ID of the token",
                                      "type" : "string",
                                      "maxLength" : 36
                                    },
                                    "tokenRequestorName" : {
                                      "minLength" : 1,
                                      "description" : "Name of the token provider.",
                                      "type" : "string",
                                      "maxLength" : 50
                                    },
                                    "deviceName" : {
                                      "minLength" : 1,
                                      "description" : "Name of the device the token is linked to.",
                                      "type" : "string",
                                      "maxLength" : 50
                                    }
                                  }
                                },
                                "transactionAmount" : {
                                  "type" : "object"
                                },
                                "counterpartyBankAccountDetails" : {
                                  "description" : "Counterparty banking details. Mandatory for âPayment Transactionsâ.",
                                  "type" : "string"
                                },
                                "id" : {
                                  "minLength" : 1,
                                  "description" : "Unique id of the transaction. The transaction keeps this id all along its life. The other references can change depending on the status.",
                                  "type" : "string",
                                  "maxLength" : 20
                                },
                                "arn" : {
                                  "description" : "Acquirer Reference Number",
                                  "type" : "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Statement Returned"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountSettledStatementRequest",
            "type" : "object",
            "required" : [ "entity_id", "virtual_account_ref" ],
            "properties" : {
              "from_date_time" : {
                "type" : "object"
              },
              "max_num_transactions" : {
                "type" : "object"
              },
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "page_token" : {
                "description" : "Token to be used to retrieve the next page.",
                "type" : "string"
              },
              "max_page_size" : {
                "format" : "int32",
                "description" : "Size of the page to be returned.",
                "type" : "integer"
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "to_date_time" : {
                "type" : "object"
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call returns a statement of settled account activity.",
          "required" : true
        } ],
        "tags" : [ "virtual accounts" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/virtual-account/settled-statement",
      "parameters" : [ ]
    },
    "/card/discharge" : {
      "post" : {
        "summary" : "Discharge funds from an unavailable card, this adjustment unload will succeed when the card isin an unavailable status (âLOSâ, âSTOâ, âCANâ, âEXPâ). Do not use for operational unload as some security features are disabled.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardDischarge",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.cards prepaid (Coming to your Sandbox soon!)",
        "produces" : [ "application/json" ],
        "x-WM-OPERATION_TYPE" : "create",
        "operationId" : "BNKAccounts_postCardDischarge",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardDischargeResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "operation_id" : {
                  "minLength" : 15,
                  "description" : "Bankable reference of the operation.",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Card Discharged"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardDischargeRequest",
            "type" : "object",
            "required" : [ "amount", "card_client_code", "card_holder_desc", "currency", "description", "entity_id", "virtual_account_ref" ],
            "properties" : {
              "amount" : {
                "minLength" : 1,
                "description" : "Maximum limit amount for the corporate. Decimal separator \".\" (point). Thousand separator; none.",
                "type" : "string",
                "maxLength" : 21
              },
              "card_holder_desc" : {
                "type" : "object"
              },
              "product_id" : {
                "minLength" : 1,
                "description" : "Product reference",
                "type" : "string",
                "maxLength" : 50
              },
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "description" : {
                "type" : "object"
              },
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "currency" : {
                "minLength" : 3,
                "description" : "Currency. ISO 3 characters code.",
                "type" : "string",
                "maxLength" : 3
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call discharge funds from an unavailable card",
          "required" : true
        } ],
        "tags" : [ "cards prepaid (Coming to your Sandbox soon!)" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/discharge",
      "parameters" : [ ]
    },
    "/card/pin-info-sms" : {
      "post" : {
        "summary" : "Retrieves the unencrypted \"PIN code\" via SMS to the specified mobile number. If no number is sent, the message would be sent to the card holder mobile registered at creation time.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardPinInfoSms",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card management",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardPinInfoSms",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardPinInfoSmsResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Returned"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardPinInfoSmsRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id" ],
            "properties" : {
              "mobile_no" : {
                "minLength" : 1,
                "description" : "Mandatory for 3D- Secure e-commerce payments. Mobile number of the individual.",
                "type" : "string",
                "maxLength" : 20
              },
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "mobile_ext" : {
                "minLength" : 1,
                "description" : "Country Code extension for mobile telephone number.",
                "type" : "string",
                "maxLength" : 5
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call retrieves an unencrypted PIN code via SMS.",
          "required" : true
        } ],
        "tags" : [ "card management" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/pin-info-sms",
      "parameters" : [ ]
    },
    "/direct-debit-mandate/activate" : {
      "post" : {
        "summary" : "Activates a direct debit mandate that has been blocked.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postDirectDebitMandateActivate",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.direct debits (Coming to your Sandbox soon!)",
        "produces" : [ "application/json" ],
        "x-WM-OPERATION_TYPE" : "create",
        "operationId" : "BNKAccounts_postDirectDebitMandateActivate",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostDirectDebitMandateActivateResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Activated"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostDirectDebitMandateActivateRequest",
            "type" : "object",
            "required" : [ "client_code", "entity_id", "funding_account_code", "mandate_id" ],
            "properties" : {
              "funding_account_code" : {
                "type" : "object"
              },
              "mandate_id" : {
                "type" : "array",
                "items" : {
                  "minLength" : 50,
                  "description" : "Unique identifier provided by the scheme for the mandates",
                  "type" : "string",
                  "maxLength" : 50
                }
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "client_code" : {
                "type" : "object"
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call activates a blocked direct debit.",
          "required" : true
        } ],
        "tags" : [ "direct debits (Coming to your Sandbox soon!)" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/direct-debit-mandate/activate",
      "parameters" : [ ]
    },
    "/card/status-damaged" : {
      "post" : {
        "summary" : "Sets the status of a card on the platform to \"DAMAGED\".",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardStatusDamaged",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card status",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardStatusDamaged",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatusDamagedResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Updated"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatusDamagedRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id" ],
            "properties" : {
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call sets a status of a card to \"DAMAGED\".",
          "required" : true
        } ],
        "tags" : [ "card status" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/status-damaged",
      "parameters" : [ ]
    },
    "/core/transac-check" : {
      "post" : {
        "summary" : "Retrieves the request and response of a client transaction based on a previous unique client_transac_id of the transaction.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCoreTransacCheck",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.core",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCoreTransacCheck",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCoreTransacCheckResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "response_data" : {
                  "minLength" : 1,
                  "description" : "Escaped json with the request data of the call with client_transac_id_check in client_transac_id. If empty this call is still running.",
                  "type" : "string"
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "request_data" : {
                  "minLength" : 1,
                  "description" : "Escaped json with the request data of the call with client_transac_id_check in client_transac_id",
                  "type" : "string"
                }
              }
            },
            "description" : "Returned"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCoreTransacCheckRequest",
            "type" : "object",
            "required" : [ "client_transac_id_check", "entity_id" ],
            "properties" : {
              "client_transac_id_check" : {
                "type" : "object"
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call retrieves a client transaction request and response.",
          "required" : true
        } ],
        "tags" : [ "core" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/core/transac-check",
      "parameters" : [ ]
    },
    "/card/renew" : {
      "post" : {
        "summary" : "Renew a previously ordered card. A new delivery address can be provided as part of the renew request.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardRenew",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card status",
        "produces" : [ "application/json" ],
        "x-WM-OPERATION_TYPE" : "create",
        "operationId" : "BNKAccounts_postCardRenew",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardRenewResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "card_line_4" : {
                  "minLength" : 1,
                  "description" : "Free text field. For line 4 variable data. A regular expression for control will put in place.",
                  "type" : "string",
                  "maxLength" : 30
                },
                "card_name" : {
                  "minLength" : 1,
                  "description" : "The name to appear on the card. If omitted then the card name will be composed by: <first_name><><last_name> or if abbreviation is needed <first letter of first_name><><last_name>. The field length can vary depending on the card design and is also restricted to a maximum of 21 if the provider is Marqeta.",
                  "type" : "string",
                  "maxLength" : 27
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "card_pan" : {
                  "minLength" : 16,
                  "description" : "16 or 19 digit card number. Only in the response if the card is virtual and the client is authorised to receive this secure data.",
                  "type" : "string",
                  "maxLength" : 19
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "card_exp_date" : {
                  "minLength" : 10,
                  "description" : "The expiry date of the card (format yyyy-mm-dd).",
                  "type" : "string",
                  "maxLength" : 10
                },
                "card_cvc2" : {
                  "minLength" : 3,
                  "description" : "The CVC2 number for the card. Only in the response if the card is virtual and the client is authorised to receive this secure data.",
                  "type" : "string",
                  "maxLength" : 3
                }
              }
            },
            "description" : "Renewed"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardRenewRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id" ],
            "properties" : {
              "delivery_address" : {
                "type" : "object"
              },
              "card_line_4" : {
                "minLength" : 1,
                "description" : "Free text field. For line 4 variable data. A regular expression for control will put in place.",
                "type" : "string",
                "maxLength" : 30
              },
              "card_name" : {
                "minLength" : 1,
                "description" : "The name to appear on the card. If omitted then the card name will be composed by: <first_name><><last_name> or if abbreviation is needed <first letter of first_name><><last_name>. The field length can vary depending on the card design and is also restricted to a maximum of 21 if the provider is Marqeta.",
                "type" : "string",
                "maxLength" : 27
              },
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call renews a previously ordered card.",
          "required" : true
        } ],
        "tags" : [ "card status" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/renew",
      "parameters" : [ ]
    },
    "/card/load" : {
      "post" : {
        "summary" : "Load funds to a specified card from the specified account.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardLoad",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.cards prepaid (Coming to your Sandbox soon!)",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardLoad",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardLoadResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "operation_id" : {
                  "minLength" : 15,
                  "description" : "Bankable reference of the operation.",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Loaded"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardLoadRequest",
            "type" : "object",
            "required" : [ "amount", "card_client_code", "card_holder_load_desc", "corp_load_desc", "currency", "entity_id", "virtual_account_ref" ],
            "properties" : {
              "amount" : {
                "minLength" : 1,
                "description" : "Maximum limit amount for the corporate. Decimal separator \".\" (point). Thousand separator; none.",
                "type" : "string",
                "maxLength" : 21
              },
              "product_id" : {
                "minLength" : 1,
                "description" : "Product reference",
                "type" : "string",
                "maxLength" : 50
              },
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "card_holder_load_desc" : {
                "type" : "object"
              },
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "currency" : {
                "minLength" : 3,
                "description" : "Currency. ISO 3 characters code.",
                "type" : "string",
                "maxLength" : 3
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "corp_load_desc" : {
                "type" : "object"
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call load fund to a specified card from the specified account.",
          "required" : true
        } ],
        "tags" : [ "cards prepaid (Coming to your Sandbox soon!)" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/load",
      "parameters" : [ ]
    },
    "/card/update" : {
      "post" : {
        "summary" : "Allows cardholders to update the parameters of the card.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardUpdate",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card management",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardUpdate",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardUpdateResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Updated"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardUpdateRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id" ],
            "properties" : {
              "card_line_4" : {
                "minLength" : 1,
                "description" : "Free text field. For line 4 variable data. A regular expression for control will put in place.",
                "type" : "string",
                "maxLength" : 30
              },
              "design_id" : {
                "minLength" : 1,
                "description" : "The card design reference of the card that is being created. The relevant designs will be provided by Bankable.",
                "type" : "string",
                "maxLength" : 20
              },
              "expiry_renew" : {
                "format" : "int32",
                "description" : " 0: do not renew at card expiration 1: automatic renewal at card expiration",
                "type" : "integer"
              },
              "profile" : {
                "minLength" : 1,
                "description" : "Profile of limits, velocities, and fees of the virtual account. Not available on all packages.",
                "type" : "string",
                "maxLength" : 20
              },
              "card_name" : {
                "minLength" : 1,
                "description" : "The name to appear on the card. If omitted then the card name will be composed by: <first_name><><last_name> or if abbreviation is needed <first letter of first_name><><last_name>. The field length can vary depending on the card design and is also restricted to a maximum of 21 if the provider is Marqeta.",
                "type" : "string",
                "maxLength" : 27
              },
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "deny_service" : {
                "minLength" : 1,
                "description" : "Comma separated list of services (authorisation transaction types) that should be denied for the card: 0 - Sale (Goods & services) 1 - Cash 9 - Sale with cashback Not available on all markets",
                "type" : "string",
                "maxLength" : 100
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "image_id" : {
                "minLength" : 1,
                "description" : "ID of a predefined image",
                "type" : "string",
                "maxLength" : 16
              },
              "deny_mcc" : {
                "minLength" : 1,
                "description" : "Comma separated list of MCC codes that should be denied. To define a range of MCC, separate the first and last MCC by a minus. Not available on all the markets",
                "type" : "string",
                "maxLength" : 192
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call updates a card",
          "required" : true
        } ],
        "tags" : [ "card management" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/update",
      "parameters" : [ ]
    },
    "/corporate/create" : {
      "post" : {
        "summary" : "Creates a corporate",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCorporateCreate",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.corporates",
        "produces" : [ "application/json" ],
        "x-WM-OPERATION_TYPE" : "create",
        "operationId" : "BNKAccounts_postCorporateCreate",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCorporateCreateResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "corporate_client_code" : {
                  "minLength" : 20,
                  "description" : "The corporate client code (unique identifier) of the corporate.",
                  "type" : "string",
                  "maxLength" : 20
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Created"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCorporateCreateRequest",
            "type" : "object",
            "required" : [ "corporate_name", "entity_id" ],
            "properties" : {
              "country_code" : {
                "minLength" : 2,
                "description" : "Two-character ISO alphabetic code. Examples: FR / GB. If left blank, the country of the client will be used.",
                "type" : "string",
                "maxLength" : 2
              },
              "parent_corporate_client_code" : {
                "type" : "object"
              },
              "corporate_name" : {
                "minLength" : 1,
                "description" : "Corporate name",
                "type" : "string",
                "maxLength" : 50
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call returns the corporate_client_code of the new corporate",
          "required" : true
        } ],
        "tags" : [ "corporates" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/corporate/create",
      "parameters" : [ ]
    },
    "/card/geo-profile-remove" : {
      "post" : {
        "summary" : "Remove a restricted region from a card",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardGeoProfileRemove",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.geo blocking and restricted countries",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardGeoProfileRemove",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardGeoProfileRemoveResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "geo_profile_code" : {
                  "minLength" : 8,
                  "description" : "Unique Identifier of geo profile",
                  "type" : "string",
                  "maxLength" : 20
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Region removed from the card"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardGeoProfileRemoveRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id", "geo_profile_code" ],
            "properties" : {
              "geo_profile_code" : {
                "minLength" : 8,
                "description" : "Unique Identifier of geo profile",
                "type" : "string",
                "maxLength" : 20
              },
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call remove a restricted region from a card",
          "required" : true
        } ],
        "tags" : [ "geo blocking and restricted countries" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/geo-profile-remove",
      "parameters" : [ ]
    },
    "/card/refund" : {
      "post" : {
        "summary" : "Request a fee reimbursement, this adjustment load will not increase the load limit, and no processor load fees will be taken.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardRefund",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.cards prepaid (Coming to your Sandbox soon!)",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardRefund",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardRefundResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "operation_id" : {
                  "minLength" : 15,
                  "description" : "Bankable reference of the operation.",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Executed"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardRefundRequest",
            "type" : "object",
            "required" : [ "amount", "card_client_code", "currency", "entity_id", "virtual_account_ref" ],
            "properties" : {
              "amount" : {
                "minLength" : 1,
                "description" : "Maximum limit amount for the corporate. Decimal separator \".\" (point). Thousand separator; none.",
                "type" : "string",
                "maxLength" : 21
              },
              "card_holder_desc" : {
                "type" : "object"
              },
              "product_id" : {
                "minLength" : 1,
                "description" : "Product reference",
                "type" : "string",
                "maxLength" : 50
              },
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "description" : {
                "type" : "object"
              },
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "currency" : {
                "minLength" : 3,
                "description" : "Currency. ISO 3 characters code.",
                "type" : "string",
                "maxLength" : 3
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call request a fee reimbursement.",
          "required" : true
        } ],
        "tags" : [ "cards prepaid (Coming to your Sandbox soon!)" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/refund",
      "parameters" : [ ]
    },
    "/corporate/info" : {
      "post" : {
        "summary" : "Retrieves the details of a corporate using the unique identifier corporate_client_code.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCorporateInfo",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.corporates",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCorporateInfo",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCorporateInfoResponse",
              "type" : "object",
              "properties" : {
                "parent_corporate" : {
                  "type" : "object"
                },
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "addresses" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "delivery_address" : {
                        "type" : "object",
                        "properties" : {
                          "zip" : {
                            "minLength" : 1,
                            "description" : "Zip or Postal Code",
                            "type" : "string",
                            "maxLength" : 9
                          },
                          "country" : {
                            "minLength" : 2,
                            "description" : "Two-character ISO alphabetic code. Examples: FR / GB. If left blank, the country of the client will be used.",
                            "type" : "string",
                            "maxLength" : 2
                          },
                          "city" : {
                            "minLength" : 1,
                            "description" : "City or Town",
                            "type" : "string",
                            "maxLength" : 40
                          },
                          "state" : {
                            "minLength" : 1,
                            "description" : "State, District or full Country name",
                            "type" : "string",
                            "maxLength" : 100
                          },
                          "line3" : {
                            "minLength" : 1,
                            "description" : "Further address lines, as required",
                            "type" : "string",
                            "maxLength" : 35
                          },
                          "line2" : {
                            "minLength" : 1,
                            "description" : "Further address lines, as required",
                            "type" : "string",
                            "maxLength" : 35
                          },
                          "line1" : {
                            "minLength" : 1,
                            "description" : "First Line of the address",
                            "type" : "string",
                            "maxLength" : 35
                          }
                        }
                      },
                      "billing_address" : {
                        "type" : "object",
                        "properties" : {
                          "zip" : {
                            "minLength" : 1,
                            "description" : "Zip or Postal Code",
                            "type" : "string",
                            "maxLength" : 9
                          },
                          "country" : {
                            "minLength" : 2,
                            "description" : "Two-character ISO alphabetic code. Examples: FR / GB. If left blank, the country of the client will be used.",
                            "type" : "string",
                            "maxLength" : 2
                          },
                          "city" : {
                            "minLength" : 1,
                            "description" : "City or Town",
                            "type" : "string",
                            "maxLength" : 40
                          },
                          "state" : {
                            "minLength" : 1,
                            "description" : "State, District or full Country name",
                            "type" : "string",
                            "maxLength" : 100
                          },
                          "line3" : {
                            "minLength" : 1,
                            "description" : "Further address lines, as required",
                            "type" : "string",
                            "maxLength" : 35
                          },
                          "line2" : {
                            "minLength" : 1,
                            "description" : "Further address lines, as required",
                            "type" : "string",
                            "maxLength" : 35
                          },
                          "line1" : {
                            "minLength" : 1,
                            "description" : "First Line of the address",
                            "type" : "string",
                            "maxLength" : 35
                          }
                        }
                      },
                      "hq_address" : {
                        "type" : "object",
                        "properties" : {
                          "zip" : {
                            "minLength" : 1,
                            "description" : "Zip or Postal Code",
                            "type" : "string",
                            "maxLength" : 9
                          },
                          "country" : {
                            "minLength" : 2,
                            "description" : "Two-character ISO alphabetic code. Examples: FR / GB. If left blank, the country of the client will be used.",
                            "type" : "string",
                            "maxLength" : 2
                          },
                          "city" : {
                            "minLength" : 1,
                            "description" : "City or Town",
                            "type" : "string",
                            "maxLength" : 40
                          },
                          "state" : {
                            "minLength" : 1,
                            "description" : "State, District or full Country name",
                            "type" : "string",
                            "maxLength" : 100
                          },
                          "line3" : {
                            "minLength" : 1,
                            "description" : "Further address lines, as required",
                            "type" : "string",
                            "maxLength" : 35
                          },
                          "line2" : {
                            "minLength" : 1,
                            "description" : "Further address lines, as required",
                            "type" : "string",
                            "maxLength" : 35
                          },
                          "line1" : {
                            "minLength" : 1,
                            "description" : "First Line of the address",
                            "type" : "string",
                            "maxLength" : 35
                          }
                        }
                      }
                    }
                  }
                },
                "corporate_name" : {
                  "minLength" : 1,
                  "description" : "Corporate name",
                  "type" : "string",
                  "maxLength" : 50
                },
                "sub_corporates" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "corporate_client_code" : {
                        "minLength" : 20,
                        "description" : "The corporate client code (unique identifier) of the corporate.",
                        "type" : "string",
                        "maxLength" : 20
                      },
                      "corporate_name" : {
                        "minLength" : 1,
                        "description" : "Corporate name",
                        "type" : "string",
                        "maxLength" : 50
                      }
                    }
                  }
                },
                "corporate_families" : {
                  "minLength" : 1,
                  "description" : "Identifier for corporate hierarchies, under which a family of corporates has been created.",
                  "type" : "string",
                  "maxLength" : 50
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "virtual_accounts" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "virtual_account" : {
                        "type" : "object",
                        "properties" : {
                          "virtual_account_name" : {
                            "minLength" : 1,
                            "description" : "Account name",
                            "type" : "string",
                            "maxLength" : 200
                          },
                          "virtual_account_ref" : {
                            "minLength" : 1,
                            "description" : "Reference ID of the virtual account",
                            "type" : "string",
                            "maxLength" : 20
                          }
                        }
                      }
                    }
                  }
                },
                "kyb_info" : {
                  "type" : "object",
                  "properties" : {
                    "kyb_status" : {
                      "minLength" : 6,
                      "description" : "KYB status of the corporate. Status can be 'Passed','Rejected' or 'Pending'.",
                      "type" : "string",
                      "maxLength" : 8,
                      "enum" : [ "Passed", "Rejected", "Pending" ]
                    },
                    "kyb_limit" : {
                      "type" : "object",
                      "properties" : {
                        "amount" : {
                          "minLength" : 1,
                          "description" : "Maximum limit amount for the corporate. Decimal separator \".\" (point). Thousand separator; none.",
                          "type" : "string",
                          "maxLength" : 21
                        },
                        "funds_accepted" : {
                          "minLength" : 1,
                          "description" : "The total amount of the transactions that have been accepted during the period.",
                          "type" : "string",
                          "maxLength" : 21
                        },
                        "valid_to" : {
                          "description" : "Date until which the kyb limit is applied. Format yyyy-mm-dd.",
                          "type" : "string"
                        },
                        "funds_suspended" : {
                          "minLength" : 1,
                          "description" : "The total amount of the transactions that have been suspended during the period.",
                          "type" : "string",
                          "maxLength" : 21
                        },
                        "valid_from" : {
                          "minLength" : 10,
                          "description" : "Date from which the kyb limit is applied. Format yyyy-mm-dd.",
                          "type" : "string",
                          "maxLength" : 10
                        },
                        "currency" : {
                          "minLength" : 3,
                          "description" : "Currency. ISO 3 characters code.",
                          "type" : "string",
                          "maxLength" : 3
                        }
                      }
                    }
                  }
                }
              }
            },
            "description" : "Retrieved"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCorporateInfoRequest",
            "type" : "object",
            "required" : [ "corporate_client_code", "entity_id" ],
            "properties" : {
              "corporate_client_code" : {
                "minLength" : 20,
                "description" : "The corporate client code (unique identifier) of the corporate.",
                "type" : "string",
                "maxLength" : 20
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call retrieves full details for a corporate that is uniquely identified by the corporate_client_code.",
          "required" : true
        } ],
        "tags" : [ "corporates" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/corporate/info",
      "parameters" : [ ]
    },
    "/virtual-account/current-statement" : {
      "post" : {
        "summary" : "List all current and settled transactions for a given period together with the opening and closing balance for that period.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postVirtualAccountCurrentStatement",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.virtual accounts",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postVirtualAccountCurrentStatement",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountCurrentStatementResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "statement" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "metaData" : {
                        "type" : "object",
                        "properties" : {
                          "from_date_time" : {
                            "type" : "object"
                          },
                          "accountReference" : {
                            "minLength" : 1,
                            "description" : "Reference ID of the virtual account",
                            "type" : "string",
                            "maxLength" : 20
                          },
                          "nextPageToken" : {
                            "description" : "Token for accessing the next page of the statement",
                            "type" : "string"
                          },
                          "numTransactionsRequested" : {
                            "type" : "object"
                          },
                          "to_date_time" : {
                            "type" : "object"
                          }
                        }
                      },
                      "content" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "pendingStatementTransaction" : {
                              "type" : "object",
                              "properties" : {
                                "dateTime" : {
                                  "minLength" : 19,
                                  "description" : "Date and time, formatted yyyy-mm-dd hh:mm:ss.",
                                  "type" : "string",
                                  "maxLength" : 19
                                },
                                "country" : {
                                  "minLength" : 2,
                                  "description" : "Two-character ISO alphabetic code. Examples: FR / GB. If left blank, the country of the client will be used.",
                                  "type" : "string",
                                  "maxLength" : 2
                                },
                                "transactionCurrency" : {
                                  "minLength" : 3,
                                  "description" : "Currency. ISO 3 characters code.",
                                  "type" : "string",
                                  "maxLength" : 3
                                },
                                "scheme" : {
                                  "minLength" : 10,
                                  "description" : "This is the payment scheme that governs the processing of operations. For faster payments, the key will be \"FPS\".",
                                  "type" : "string",
                                  "maxLength" : 10
                                },
                                "pending" : {
                                  "type" : "object",
                                  "properties" : {
                                    "amount" : {
                                      "minLength" : 1,
                                      "description" : "Maximum limit amount for the corporate. Decimal separator \".\" (point). Thousand separator; none.",
                                      "type" : "string",
                                      "maxLength" : 21
                                    },
                                    "fees" : {
                                      "type" : "object",
                                      "properties" : {
                                        "fxFeeAmount" : {
                                          "minLength" : 1,
                                          "description" : "Amount of the FX fee.",
                                          "type" : "string",
                                          "maxLength" : 21
                                        },
                                        "atmFeeAmount" : {
                                          "description" : "The ATM fee amount settled in the account currency. ISO format currency amount. Number of decimal places is defined by the currency type may be between 0 and 4.",
                                          "type" : "string"
                                        },
                                        "otherFeeAmount" : {
                                          "description" : "The sum of all other fees settled in the account currency. ISO format currency amount. Number of decimal places is defined by the currency type may be between 0 and 4.",
                                          "type" : "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "merchant" : {
                                  "type" : "object",
                                  "properties" : {
                                    "code" : {
                                      "minLength" : 1,
                                      "description" : "Merchant Code",
                                      "type" : "string",
                                      "maxLength" : 15
                                    },
                                    "name" : {
                                      "minLength" : 1,
                                      "description" : "Merchant Name",
                                      "type" : "string",
                                      "maxLength" : 22
                                    },
                                    "categoryCode" : {
                                      "minLength" : 1,
                                      "description" : "Merchant Category Code",
                                      "type" : "string",
                                      "maxLength" : 4
                                    }
                                  }
                                },
                                "counterpartyAccountDetails" : {
                                  "type" : "object"
                                },
                                "type" : {
                                  "format" : "int32",
                                  "description" : "The type of the transaction: 0: Internal 1: Purchase 2: ATM Cash 3: Cashback 4: Offline Balance Collection 5: ATM Balance 6: Purchase Reversal 7: ATM Reversal 8: TopUp 9: Transfer 10: Adjustment 11: Refund 12: Reimbursment",
                                  "type" : "integer"
                                },
                                "reference" : {
                                  "type" : "object"
                                },
                                "ordererRef" : {
                                  "minLength" : 1,
                                  "description" : "External reference, assigned by the orderer, used to uniquely identify the order. This reference is transmitted throughout the entire payment circuit.",
                                  "type" : "string",
                                  "maxLength" : 35
                                },
                                "trn" : {
                                  "description" : "Transaction Reference Number",
                                  "type" : "string"
                                },
                                "digitalWallet" : {
                                  "type" : "object",
                                  "properties" : {
                                    "deviceType" : {
                                      "minLength" : 5,
                                      "description" : "The type of device into which the digital wallet token will be provisioned. Allowable values: MOBILE_PHONE, WATCH, TABLET",
                                      "type" : "string",
                                      "maxLength" : 12,
                                      "enum" : [ "MOBILE_PHONE", "WATCH", "TABLET" ]
                                    },
                                    "digitalWalletToken" : {
                                      "minLength" : 1,
                                      "description" : "Unique ID of the token",
                                      "type" : "string",
                                      "maxLength" : 36
                                    },
                                    "tokenRequestorName" : {
                                      "minLength" : 1,
                                      "description" : "Name of the token provider.",
                                      "type" : "string",
                                      "maxLength" : 50
                                    },
                                    "deviceName" : {
                                      "minLength" : 1,
                                      "description" : "Name of the device the token is linked to.",
                                      "type" : "string",
                                      "maxLength" : 50
                                    }
                                  }
                                },
                                "transactionAmount" : {
                                  "type" : "object"
                                },
                                "counterpartyBankAccountDetails" : {
                                  "description" : "Counterparty banking details. Mandatory for âPayment Transactionsâ.",
                                  "type" : "string"
                                },
                                "id" : {
                                  "minLength" : 1,
                                  "description" : "Unique id of the transaction. The transaction keeps this id all along its life. The other references can change depending on the status.",
                                  "type" : "string",
                                  "maxLength" : 20
                                },
                                "arn" : {
                                  "description" : "Acquirer Reference Number",
                                  "type" : "string"
                                }
                              }
                            },
                            "summary" : {
                              "type" : "object",
                              "properties" : {
                                "settledBalance" : {
                                  "type" : "object"
                                },
                                "pendingTransactionCount" : {
                                  "format" : "int32",
                                  "description" : "The number of pending transactions in the statement.",
                                  "type" : "integer"
                                },
                                "accountCurrency" : {
                                  "minLength" : 3,
                                  "description" : "Currency. ISO 3 characters code.",
                                  "type" : "string",
                                  "maxLength" : 3
                                },
                                "settledTransactionCount" : {
                                  "format" : "int32",
                                  "description" : "The number of settled transactions in the statement.",
                                  "type" : "integer"
                                },
                                "openingSettledBalance" : {
                                  "type" : "object"
                                },
                                "availableBalance" : {
                                  "type" : "object"
                                }
                              }
                            },
                            "settledStatementTransaction" : {
                              "type" : "object",
                              "properties" : {
                                "dateTime" : {
                                  "minLength" : 19,
                                  "description" : "Date and time, formatted yyyy-mm-dd hh:mm:ss.",
                                  "type" : "string",
                                  "maxLength" : 19
                                },
                                "country" : {
                                  "minLength" : 2,
                                  "description" : "Two-character ISO alphabetic code. Examples: FR / GB. If left blank, the country of the client will be used.",
                                  "type" : "string",
                                  "maxLength" : 2
                                },
                                "transactionCurrency" : {
                                  "minLength" : 3,
                                  "description" : "Currency. ISO 3 characters code.",
                                  "type" : "string",
                                  "maxLength" : 3
                                },
                                "scheme" : {
                                  "minLength" : 10,
                                  "description" : "This is the payment scheme that governs the processing of operations. For faster payments, the key will be \"FPS\".",
                                  "type" : "string",
                                  "maxLength" : 10
                                },
                                "merchant" : {
                                  "type" : "object",
                                  "properties" : {
                                    "code" : {
                                      "minLength" : 1,
                                      "description" : "Merchant Code",
                                      "type" : "string",
                                      "maxLength" : 15
                                    },
                                    "name" : {
                                      "minLength" : 1,
                                      "description" : "Merchant Name",
                                      "type" : "string",
                                      "maxLength" : 22
                                    },
                                    "categoryCode" : {
                                      "minLength" : 1,
                                      "description" : "Merchant Category Code",
                                      "type" : "string",
                                      "maxLength" : 4
                                    }
                                  }
                                },
                                "counterpartyAccountDetails" : {
                                  "type" : "object"
                                },
                                "type" : {
                                  "format" : "int32",
                                  "description" : "The type of the transaction: 0: Internal 1: Purchase 2: ATM Cash 3: Cashback 4: Offline Balance Collection 5: ATM Balance 6: Purchase Reversal 7: ATM Reversal 8: TopUp 9: Transfer 10: Adjustment 11: Refund 12: Reimbursment",
                                  "type" : "integer"
                                },
                                "settlement" : {
                                  "type" : "object",
                                  "properties" : {
                                    "dateTime" : {
                                      "minLength" : 19,
                                      "description" : "Date and time, formatted yyyy-mm-dd hh:mm:ss.",
                                      "type" : "string",
                                      "maxLength" : 19
                                    },
                                    "amount" : {
                                      "minLength" : 1,
                                      "description" : "Maximum limit amount for the corporate. Decimal separator \".\" (point). Thousand separator; none.",
                                      "type" : "string",
                                      "maxLength" : 21
                                    },
                                    "balanceAfter" : {
                                      "type" : "object"
                                    }
                                  }
                                },
                                "reference" : {
                                  "type" : "object"
                                },
                                "ordererRef" : {
                                  "minLength" : 1,
                                  "description" : "External reference, assigned by the orderer, used to uniquely identify the order. This reference is transmitted throughout the entire payment circuit.",
                                  "type" : "string",
                                  "maxLength" : 35
                                },
                                "trn" : {
                                  "description" : "Transaction Reference Number",
                                  "type" : "string"
                                },
                                "digitalWallet" : {
                                  "type" : "object",
                                  "properties" : {
                                    "deviceType" : {
                                      "minLength" : 5,
                                      "description" : "The type of device into which the digital wallet token will be provisioned. Allowable values: MOBILE_PHONE, WATCH, TABLET",
                                      "type" : "string",
                                      "maxLength" : 12,
                                      "enum" : [ "MOBILE_PHONE", "WATCH", "TABLET" ]
                                    },
                                    "digitalWalletToken" : {
                                      "minLength" : 1,
                                      "description" : "Unique ID of the token",
                                      "type" : "string",
                                      "maxLength" : 36
                                    },
                                    "tokenRequestorName" : {
                                      "minLength" : 1,
                                      "description" : "Name of the token provider.",
                                      "type" : "string",
                                      "maxLength" : 50
                                    },
                                    "deviceName" : {
                                      "minLength" : 1,
                                      "description" : "Name of the device the token is linked to.",
                                      "type" : "string",
                                      "maxLength" : 50
                                    }
                                  }
                                },
                                "transactionAmount" : {
                                  "type" : "object"
                                },
                                "counterpartyBankAccountDetails" : {
                                  "description" : "Counterparty banking details. Mandatory for âPayment Transactionsâ.",
                                  "type" : "string"
                                },
                                "id" : {
                                  "minLength" : 1,
                                  "description" : "Unique id of the transaction. The transaction keeps this id all along its life. The other references can change depending on the status.",
                                  "type" : "string",
                                  "maxLength" : 20
                                },
                                "arn" : {
                                  "description" : "Acquirer Reference Number",
                                  "type" : "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Statement Returned"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountCurrentStatementRequest",
            "type" : "object",
            "required" : [ "entity_id", "virtual_account_ref" ],
            "properties" : {
              "from_date_time" : {
                "type" : "object"
              },
              "max_num_transactions" : {
                "type" : "object"
              },
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "page_token" : {
                "description" : "Token to be used to retrieve the next page.",
                "type" : "string"
              },
              "max_page_size" : {
                "format" : "int32",
                "description" : "Size of the page to be returned.",
                "type" : "integer"
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "to_date_time" : {
                "type" : "object"
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call returns a statement of current and settled account activity.",
          "required" : true
        } ],
        "tags" : [ "virtual accounts" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/virtual-account/current-statement",
      "parameters" : [ ]
    },
    "/core/status" : {
      "post" : {
        "summary" : "Allows clients to verify the API availability, it does not provide status for the services behind the API. If the API is available, the response will be returned. If it is unavailable, the call will timeout.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCoreStatus",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.core",
        "produces" : [ "application/json" ],
        "x-WM-OPERATION_TYPE" : "create",
        "operationId" : "BNKAccounts_postCoreStatus",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCoreStatusResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Returned"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCoreStatusRequest",
            "type" : "object",
            "required" : [ "entity_id" ],
            "properties" : {
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call verifies API availability.",
          "required" : true
        } ],
        "tags" : [ "core" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/core/status",
      "parameters" : [ ]
    },
    "/fx/indicative-quote" : {
      "post" : {
        "summary" : "Reports the indicative value of the fx exchange rate.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postFxIndicativeQuote",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.fx foreign exchange",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postFxIndicativeQuote",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostFxIndicativeQuoteResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "sell_currency" : {
                  "minLength" : 3,
                  "description" : "Currency. ISO 3 characters code.",
                  "type" : "string",
                  "maxLength" : 3
                },
                "buy_currency" : {
                  "minLength" : 3,
                  "description" : "Currency. ISO 3 characters code.",
                  "type" : "string",
                  "maxLength" : 3
                },
                "sell_amount" : {
                  "type" : "object"
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "buy_amount" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Exchanged"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostFxIndicativeQuoteRequest",
            "type" : "object",
            "required" : [ "amount", "buy_virtual_account_ref", "entity_id", "fix_leg", "sell_virtual_account_ref" ],
            "properties" : {
              "amount" : {
                "type" : "object"
              },
              "fix_leg" : {
                "minLength" : 3,
                "description" : "Leg of the exchange that should be fixed to the amount. Values include BUY or SELL",
                "type" : "string",
                "maxLength" : 4
              },
              "sell_virtual_account_ref" : {
                "type" : "object"
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "buy_virtual_account_ref" : {
                "type" : "object"
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call reports the indicative value of the fx exchange rate.",
          "required" : true
        } ],
        "tags" : [ "fx foreign exchange" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/fx/indicative-quote",
      "parameters" : [ ]
    },
    "/virtual-account/balance" : {
      "post" : {
        "summary" : "Returns the current balance of a virtual account.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postVirtualAccountBalance",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.virtual accounts",
        "produces" : [ "application/json" ],
        "x-WM-OPERATION_TYPE" : "create",
        "operationId" : "BNKAccounts_postVirtualAccountBalance",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountBalanceResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "virtual_account_name" : {
                  "minLength" : 1,
                  "description" : "Account name",
                  "type" : "string",
                  "maxLength" : 200
                },
                "virtual_account_balance" : {
                  "minLength" : 1,
                  "description" : "Virtual Account balance at time of request.",
                  "type" : "string",
                  "maxLength" : 21
                },
                "virtual_account_curr" : {
                  "minLength" : 3,
                  "description" : "Currency. ISO 3 characters code.",
                  "type" : "string",
                  "maxLength" : 3
                },
                "virtual_account_ref" : {
                  "minLength" : 1,
                  "description" : "Reference ID of the virtual account",
                  "type" : "string",
                  "maxLength" : 20
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Balance Returned"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountBalanceRequest",
            "type" : "object",
            "required" : [ "entity_id", "virtual_account_ref" ],
            "properties" : {
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call returns the current balance of a virtual account.",
          "required" : true
        } ],
        "tags" : [ "virtual accounts" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/virtual-account/balance",
      "parameters" : [ ]
    },
    "/consumer/info" : {
      "post" : {
        "summary" : "Retrieves a consumer's details.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postConsumerInfo",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.consumer",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postConsumerInfo",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostConsumerInfoResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "address" : {
                  "type" : "object"
                },
                "gender" : {
                  "minLength" : 1,
                  "description" : "Gender of individual",
                  "type" : "string",
                  "maxLength" : 1,
                  "enum" : [ "M", "F", "S", "X" ]
                },
                "date_of_birth" : {
                  "minLength" : 10,
                  "description" : "Date of birth of the individual, formatted yyyy-mm-dd.",
                  "type" : "string",
                  "maxLength" : 10
                },
                "mobile_no" : {
                  "minLength" : 1,
                  "description" : "Mandatory for 3D- Secure e-commerce payments. Mobile number of the individual.",
                  "type" : "string",
                  "maxLength" : 20
                },
                "last_name" : {
                  "minLength" : 1,
                  "description" : "Contact Last Name or Department",
                  "type" : "string",
                  "maxLength" : 50
                },
                "language" : {
                  "minLength" : 2,
                  "description" : "The communication language requested by the consumer following ISO 639-1 language code. E.g. en - English.",
                  "type" : "string",
                  "maxLength" : 2
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "ch_client_code" : {
                  "minLength" : 1,
                  "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "tel_no" : {
                  "minLength" : 1,
                  "description" : "The primary household landline telephone number of the consumer.",
                  "type" : "string",
                  "maxLength" : 20
                },
                "tel_ext" : {
                  "minLength" : 1,
                  "description" : "Country Code extension for landline telephone number.",
                  "type" : "string",
                  "maxLength" : 5
                },
                "first_name" : {
                  "minLength" : 1,
                  "description" : "Contact First Name or Department",
                  "type" : "string",
                  "maxLength" : 50
                },
                "email" : {
                  "minLength" : 1,
                  "description" : "The email address of the individual.",
                  "type" : "string",
                  "maxLength" : 150
                },
                "mobile_ext" : {
                  "minLength" : 1,
                  "description" : "Country Code extension for mobile telephone number.",
                  "type" : "string",
                  "maxLength" : 5
                }
              }
            },
            "description" : "Returned"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostConsumerInfoRequest",
            "type" : "object",
            "required" : [ "ch_client_code", "entity_id" ],
            "properties" : {
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "ch_client_code" : {
                "minLength" : 1,
                "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                "type" : "string",
                "maxLength" : 50
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call retrieves all the details about a consumer.",
          "required" : true
        } ],
        "tags" : [ "consumer" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/consumer/info",
      "parameters" : [ ]
    },
    "/card/status-lost" : {
      "post" : {
        "summary" : "Sets the status of a card on the platform to \"LOST\".",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardStatusLost",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card status",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardStatusLost",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatusLostResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Updated"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatusLostRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id" ],
            "properties" : {
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call sets a status of a card to \"LOST\".",
          "required" : true
        } ],
        "tags" : [ "card status" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/status-lost",
      "parameters" : [ ]
    },
    "/corporate/account-list" : {
      "post" : {
        "summary" : "Retrieves the account information and status of all virtual accounts linked to a corporate.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCorporateAccountList",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.corporate",
        "produces" : [ "application/json" ],
        "x-WM-OPERATION_TYPE" : "create",
        "operationId" : "BNKAccounts_postCorporateAccountList",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCorporateAccountListResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "virtual_account_list" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "account" : {
                        "type" : "object"
                      }
                    }
                  }
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Returned"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCorporateAccountListRequest",
            "type" : "object",
            "required" : [ "corporate_client_code", "entity_id" ],
            "properties" : {
              "corporate_client_code" : {
                "minLength" : 20,
                "description" : "The corporate client code (unique identifier) of the corporate.",
                "type" : "string",
                "maxLength" : 20
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call retrieves all virtual accounts linked to a corporate.",
          "required" : true
        } ],
        "tags" : [ "corporate" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/corporate/account-list",
      "parameters" : [ ]
    },
    "/direct-debit-mandate/search" : {
      "post" : {
        "summary" : "The mandate information for a funding account, can be requested for a client (corporate or consumer).",
        "x-WM-METHOD_NAME" : "BNKAccounts_postDirectDebitMandateSearch",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.direct debits (Coming to your Sandbox soon!)",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postDirectDebitMandateSearch",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostDirectDebitMandateSearchResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "mandate_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "funding_account_code" : {
                        "minLength" : 1,
                        "description" : "Reference ID of the virtual account",
                        "type" : "string",
                        "maxLength" : 20
                      },
                      "last_collection_date" : {
                        "type" : "object"
                      },
                      "creditor_id" : {
                        "minLength" : 50,
                        "description" : "Unique identifier provided by the scheme for the creditor (direct debit collector)",
                        "type" : "string",
                        "maxLength" : 50
                      },
                      "mandate_type" : {
                        "minLength" : 1,
                        "description" : "Interbank mandate transport: CORE: SDD Core B2B: SDD B2B (Business Only) BACS: UK Direct Debit",
                        "type" : "string",
                        "maxLength" : 4
                      },
                      "blocked_by" : {
                        "minLength" : 6,
                        "description" : "Debtor; DebtorBank",
                        "type" : "string",
                        "maxLength" : 10
                      },
                      "creditor_name" : {
                        "minLength" : 1,
                        "description" : "Name of the direct debit collector",
                        "type" : "string",
                        "maxLength" : 50
                      },
                      "mandate_id" : {
                        "minLength" : 50,
                        "description" : "Unique identifier provided by the scheme for the mandates",
                        "type" : "string",
                        "maxLength" : 50
                      },
                      "active" : {
                        "minLength" : 1,
                        "description" : "If no present all mandates are returned irrespective of their state. True - return active mandates. False - return inactive mandates",
                        "type" : "string",
                        "maxLength" : 1,
                        "enum" : [ "0", "1", null ]
                      }
                    }
                  }
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Information Retrieved"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostDirectDebitMandateSearchRequest",
            "type" : "object",
            "required" : [ "client_code", "entity_id", "funding_account_code" ],
            "properties" : {
              "funding_account_code" : {
                "type" : "object"
              },
              "active" : {
                "minLength" : 1,
                "description" : "If no present all mandates are returned irrespective of their state. True - return active mandates. False - return inactive mandates",
                "type" : "string",
                "maxLength" : 1,
                "enum" : [ "0", "1", null ]
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "client_code" : {
                "type" : "object"
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call retrieves mandate information for a client.",
          "required" : true
        } ],
        "tags" : [ "direct debits (Coming to your Sandbox soon!)" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/direct-debit-mandate/search",
      "parameters" : [ ]
    },
    "/card/status-unblock" : {
      "post" : {
        "summary" : "Unblocks a card using the specified card_client_code, to identify the card.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardStatusUnblock",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card status",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardStatusUnblock",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatusUnblockResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Unblocked"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatusUnblockRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id" ],
            "properties" : {
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call unblocks a specified card.",
          "required" : true
        } ],
        "tags" : [ "card status" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/status-unblock",
      "parameters" : [ ]
    },
    "/virtual-account/create" : {
      "post" : {
        "summary" : "Creates a virtual account as either a corporate, or consumer account.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postVirtualAccountCreate",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.virtual accounts",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postVirtualAccountCreate",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountCreateResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "virtual_account_name" : {
                  "minLength" : 1,
                  "description" : "Account name",
                  "type" : "string",
                  "maxLength" : 200
                },
                "virtual_account_curr" : {
                  "minLength" : 3,
                  "description" : "Currency. ISO 3 characters code.",
                  "type" : "string",
                  "maxLength" : 3
                },
                "virtual_account_ref" : {
                  "minLength" : 1,
                  "description" : "Reference ID of the virtual account",
                  "type" : "string",
                  "maxLength" : 20
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "ch_client_code" : {
                  "minLength" : 1,
                  "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                  "type" : "string",
                  "maxLength" : 50
                }
              }
            },
            "description" : "Created"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountCreateRequest",
            "type" : "object",
            "required" : [ "entity_id", "package_code", "virtual_account_curr", "virtual_account_name" ],
            "properties" : {
              "package_code" : {
                "minLength" : 1,
                "description" : "The package that defines the payment schemes and limits for the account.",
                "type" : "string",
                "maxLength" : 20
              },
              "virtual_account_name" : {
                "minLength" : 1,
                "description" : "Account name",
                "type" : "string",
                "maxLength" : 200
              },
              "virtual_account_curr" : {
                "minLength" : 3,
                "description" : "Currency. ISO 3 characters code.",
                "type" : "string",
                "maxLength" : 3
              },
              "corporate_id" : {
                "minLength" : 1,
                "description" : "Corporate Identity. If set, the future virtual account will be attached to the corporate. Otherwise, it will be attached to the default coporate of the distributor. Every virtual account that gets created will be associated to a corporate Identity.",
                "type" : "string",
                "maxLength" : 20
              },
              "profile_code" : {
                "minLength" : 1,
                "description" : "Profile of limits, velocities, and fees of the virtual account. Not available on all packages.",
                "type" : "string",
                "maxLength" : 20
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "ch_client_code" : {
                "minLength" : 1,
                "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                "type" : "string",
                "maxLength" : 50
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call creates an account belonging to a consumer within a corporate or directly to a corporate. To create a corporate account, the corporate_id of the desired corporate should be provided and the ch_client_code field should be left blank. In order to create a consumer account belonging to a consumer within a corporate, the corporate_id of the parent corporate and the ch_client_code should be provided. If no corporate_id is provided in either the creation of a corporate account or consumer account, the default corporate of the distributor will be assumed as the corporate owner of the virtual account.",
          "required" : true
        } ],
        "tags" : [ "virtual accounts" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/virtual-account/create",
      "parameters" : [ ]
    },
    "/virtual-account/transfer" : {
      "post" : {
        "summary" : "Transfer funds between two accounts on platform where the accounts can be held by different companies.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postVirtualAccountTransfer",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.virtual accounts",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postVirtualAccountTransfer",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountTransferResponse",
              "type" : "object",
              "properties" : {
                "virtual_account_ref_dst" : {
                  "minLength" : 1,
                  "description" : "Reference ID of the destination virtual account.",
                  "type" : "string",
                  "maxLength" : 20
                },
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "virtual_account_ref" : {
                  "minLength" : 1,
                  "description" : "Reference ID of the virtual account",
                  "type" : "string",
                  "maxLength" : 20
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "currency" : {
                  "minLength" : 15,
                  "description" : "Bankable reference of the operation.",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Transfer Made"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountTransferRequest",
            "type" : "object",
            "required" : [ "amount", "currency", "entity_id", "virtual_account_ref" ],
            "properties" : {
              "virtual_account_ref_dst" : {
                "minLength" : 1,
                "description" : "Reference ID of the destination virtual account.",
                "type" : "string",
                "maxLength" : 20
              },
              "amount" : {
                "minLength" : 1,
                "description" : "Maximum limit amount for the corporate. Decimal separator \".\" (point). Thousand separator; none.",
                "type" : "string",
                "maxLength" : 21
              },
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "description" : {
                "minLength" : 1,
                "description" : "Fee description in natural language",
                "type" : "string",
                "maxLength" : 100
              },
              "currency" : {
                "minLength" : 3,
                "description" : "Currency. ISO 3 characters code.",
                "type" : "string",
                "maxLength" : 3
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call makes a transfer between two virtual accounts.",
          "required" : true
        } ],
        "tags" : [ "virtual accounts" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/virtual-account/transfer",
      "parameters" : [ ]
    },
    "/card/unload" : {
      "post" : {
        "summary" : "Unload funds from the specified card to the specified account.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardUnload",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.cards prepaid (Coming to your Sandbox soon!)",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardUnload",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardUnloadResponse",
              "type" : "object",
              "properties" : {
                "unload_amount" : {
                  "type" : "object"
                },
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "virtual_account_balance" : {
                  "minLength" : 1,
                  "description" : "Virtual Account balance at time of request.",
                  "type" : "string",
                  "maxLength" : 21
                },
                "virtual_account_curr" : {
                  "type" : "object"
                },
                "virtual_account_ref" : {
                  "minLength" : 1,
                  "description" : "Reference ID of the virtual account",
                  "type" : "string",
                  "maxLength" : 20
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "operation_id" : {
                  "minLength" : 15,
                  "description" : "Bankable reference of the operation.",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Unloaded"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardUnloadRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id", "unload_currency", "virtual_account_ref" ],
            "properties" : {
              "unload_amount" : {
                "type" : "object"
              },
              "corp_unload_desc" : {
                "type" : "object"
              },
              "card_holder_unload_desc" : {
                "type" : "object"
              },
              "product_id" : {
                "minLength" : 1,
                "description" : "Product reference",
                "type" : "string",
                "maxLength" : 50
              },
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "unload_currency" : {
                "minLength" : 3,
                "description" : "Currency. ISO 3 characters code.",
                "type" : "string",
                "maxLength" : 3
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call unload funds from the specified card to the specified account.",
          "required" : true
        } ],
        "tags" : [ "cards prepaid (Coming to your Sandbox soon!)" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/unload",
      "parameters" : [ ]
    },
    "/iban/profile-upgrade" : {
      "post" : {
        "summary" : "Changes the profile associated with a multicurrency account (specified by IBAN). No changes are made to the profile during an upgrade.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postIbanProfileUpgrade",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.IBAN Management",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postIbanProfileUpgrade",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostIbanProfileUpgradeResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Upgraded"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostIbanProfileUpgradeRequest",
            "type" : "object",
            "required" : [ "entity_id", "profile_upgrades" ],
            "properties" : {
              "profile_upgrades" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "new_profile_code" : {
                      "type" : "object"
                    },
                    "iban" : {
                      "minLength" : 0,
                      "description" : "The International Bank Account Number.",
                      "type" : "string",
                      "maxLength" : 34
                    },
                    "bic" : {
                      "minLength" : 8,
                      "description" : "The BIC code of the Bank where the account is held.",
                      "type" : "string",
                      "maxLength" : 11
                    }
                  }
                }
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call updates the profile associated with the multicurrency account.",
          "required" : true
        } ],
        "tags" : [ "IBAN Management" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/iban/profile-upgrade",
      "parameters" : [ ]
    },
    "/card/fee" : {
      "post" : {
        "summary" : "Applies a fee to a card account. The fee is credited to the specified virtual accountand the card account is debited. Fees will only be charged to the card account if the balance of the card account is sufficient. The endpoint allows the caller to a reason/description for the fee.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardFee",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card financial",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardFee",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardFeeResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "virtual_account_ref" : {
                  "minLength" : 1,
                  "description" : "Reference ID of the virtual account",
                  "type" : "string",
                  "maxLength" : 20
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "operation_id" : {
                  "minLength" : 15,
                  "description" : "Bankable reference of the operation.",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Executed"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardFeeRequest",
            "type" : "object",
            "required" : [ "card_client_code", "currency", "description", "entity_id", "fee", "virtual_account_ref" ],
            "properties" : {
              "fee" : {
                "type" : "object"
              },
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "description" : {
                "type" : "object"
              },
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "currency" : {
                "minLength" : 3,
                "description" : "Currency. ISO 3 characters code.",
                "type" : "string",
                "maxLength" : 3
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call applies a fee to a card account",
          "required" : true
        } ],
        "tags" : [ "card financial" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/fee",
      "parameters" : [ ]
    },
    "/profile/update" : {
      "post" : {
        "summary" : "Update the spending limit rules of the limit profile. Updating a limit profile will automatically update the spending limits of all the cards, accounts and account holders associated with the profile. During a profile update, all accumulators are reset.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postProfileUpdate",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.limits",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postProfileUpdate",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostProfileUpdateResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "profile_code" : {
                  "minLength" : 1,
                  "description" : "Profile of limits, velocities, and fees of the virtual account. Not available on all packages.",
                  "type" : "string",
                  "maxLength" : 20
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Updated"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostProfileUpdateRequest",
            "type" : "object",
            "required" : [ "entity_id", "limit_rules", "profile_code" ],
            "properties" : {
              "profile_name" : {
                "minLength" : 1,
                "description" : "Profile name for the platform limits and fees.",
                "type" : "string",
                "maxLength" : 50
              },
              "limit_rules" : {
                "type" : "object"
              },
              "profile_code" : {
                "minLength" : 1,
                "description" : "Profile of limits, velocities, and fees of the virtual account. Not available on all packages.",
                "type" : "string",
                "maxLength" : 20
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call updates a spending limit profile.",
          "required" : true
        } ],
        "tags" : [ "limits" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/profile/update",
      "parameters" : [ ]
    },
    "/test/card-authorization" : {
      "post" : {
        "summary" : "Simulates a marqeta cards basic authorization.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postTestCardAuthorization",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.simulation",
        "produces" : [ "application/json" ],
        "x-WM-OPERATION_TYPE" : "create",
        "operationId" : "BNKAccounts_postTestCardAuthorization",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostTestCardAuthorizationResponse",
              "type" : "object",
              "properties" : {
                "payment_id" : {
                  "minLength" : 36,
                  "description" : "Reference of transaction",
                  "type" : "string",
                  "maxLength" : 36
                }
              }
            },
            "description" : "Card Auth Successful"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostTestCardAuthorizationRequest",
            "type" : "object",
            "required" : [ "amount", "card_client_code", "entity_id" ],
            "properties" : {
              "amount" : {
                "minLength" : 1,
                "description" : "Maximum limit amount for the corporate. Decimal separator \".\" (point). Thousand separator; none.",
                "type" : "string",
                "maxLength" : 21
              },
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call creates a transaction with status pending and returns transaction token.",
          "required" : true
        } ],
        "tags" : [ "simulation" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/test/card-authorization",
      "parameters" : [ ]
    },
    "/fx/card-transparency-info" : {
      "post" : {
        "summary" : "Reports FX transparency information for an FX exchange on the card scheme.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postFxCardTransparencyInfo",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.fx foreign exchange",
        "produces" : [ "application/json" ],
        "x-WM-OPERATION_TYPE" : "create",
        "operationId" : "BNKAccounts_postFxCardTransparencyInfo",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostFxCardTransparencyInfoResponse",
              "type" : "object",
              "properties" : {
                "transaction_date" : {
                  "type" : "object"
                },
                "transaction_fee_pct" : {
                  "type" : "object"
                },
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "scheme_vs_ecb_diff" : {
                  "type" : "object"
                },
                "scheme_conversion_rate" : {
                  "type" : "object"
                },
                "transaction_amount" : {
                  "type" : "object"
                },
                "issuer_conversion_rate" : {
                  "type" : "object"
                },
                "issuer_billing_amount" : {
                  "type" : "object"
                },
                "transaction_fee_fixed" : {
                  "type" : "object"
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "scheme_billing_amount" : {
                  "type" : "object"
                },
                "scheme_name" : {
                  "minLength" : 1,
                  "description" : "Name of the card scheme \"MasterCard\", \"Visa\".",
                  "type" : "string",
                  "maxLength" : 50
                },
                "ecb_conversion_rate" : {
                  "type" : "object"
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "ecb_reference_amount" : {
                  "type" : "object"
                },
                "issuer_vs_ecb_diff" : {
                  "type" : "object"
                },
                "billing_currency" : {
                  "minLength" : 3,
                  "description" : "Currency. ISO 3 characters code.",
                  "type" : "string",
                  "maxLength" : 3
                },
                "transaction_currency" : {
                  "minLength" : 3,
                  "description" : "Currency. ISO 3 characters code.",
                  "type" : "string",
                  "maxLength" : 3
                }
              }
            },
            "description" : "Returned"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostFxCardTransparencyInfoRequest",
            "type" : "object",
            "required" : [ "billing_currency", "entity_id", "scheme_name", "transaction_amount", "transaction_currency", "transaction_date" ],
            "properties" : {
              "scheme_name" : {
                "minLength" : 1,
                "description" : "Name of the card scheme \"MasterCard\", \"Visa\".",
                "type" : "string",
                "maxLength" : 50
              },
              "transaction_date" : {
                "type" : "object"
              },
              "transaction_amount" : {
                "type" : "object"
              },
              "fee_details" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fee_amount" : {
                      "minLength" : 1,
                      "description" : "Amount of the fee.",
                      "type" : "string",
                      "maxLength" : 21
                    },
                    "description" : {
                      "minLength" : 1,
                      "description" : "Fee description in natural language",
                      "type" : "string",
                      "maxLength" : 100
                    },
                    "operation_id" : {
                      "minLength" : 15,
                      "description" : "Bankable reference of the operation.",
                      "type" : "string",
                      "maxLength" : 15
                    },
                    "currency_code" : {
                      "minLength" : 3,
                      "description" : "Currency. ISO 3 characters code.",
                      "type" : "string",
                      "maxLength" : 3
                    }
                  }
                }
              },
              "billing_currency" : {
                "minLength" : 3,
                "description" : "Currency. ISO 3 characters code.",
                "type" : "string",
                "maxLength" : 3
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "transaction_currency" : {
                "type" : "object"
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call reports FX transparency information for an FX exchange on the card scheme.",
          "required" : true
        } ],
        "tags" : [ "fx foreign exchange" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/fx/card-transparency-info",
      "parameters" : [ ]
    },
    "/limit/update" : {
      "post" : {
        "summary" : "Update the existing spending limits for a card, account or card/account holder within the spending limit range of the associated limit profile.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postLimitUpdate",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.limits",
        "produces" : [ "application/json" ],
        "x-WM-OPERATION_TYPE" : "create",
        "operationId" : "BNKAccounts_postLimitUpdate",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostLimitUpdateResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Updated"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostLimitUpdateRequest",
            "type" : "object",
            "required" : [ "entity_id", "limit_update_rules" ],
            "properties" : {
              "limit_update_rules" : {
                "type" : "array",
                "items" : {
                  "type" : "object"
                }
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call updates an existing spending limit profile.",
          "required" : true
        } ],
        "tags" : [ "limits" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/limit/update",
      "parameters" : [ ]
    },
    "/card/status-info" : {
      "post" : {
        "summary" : "This API is available only for FIS processing. Returns the status of the card after a status refresh from the processor.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardStatusInfo",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card management",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardStatusInfo",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatusInfoResponse",
              "type" : "object",
              "properties" : {
                "card_status" : {
                  "minLength" : 3,
                  "description" : "Status of the card.",
                  "type" : "string",
                  "maxLength" : 3,
                  "enum" : [ "ACT", "BLO", "LOS", "NEW", "STO", "DAM", "EXP", "CAN", "REA", "PRE", "CBL", "CMD", "ABO" ]
                },
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "card_exp_date" : {
                  "minLength" : 10,
                  "description" : "The expiry date of the card (format yyyy-mm-dd).",
                  "type" : "string",
                  "maxLength" : 10
                }
              }
            },
            "description" : "Returned"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatusInfoRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id" ],
            "properties" : {
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call returns the status of the card",
          "required" : true
        } ],
        "tags" : [ "card management" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/status-info",
      "parameters" : [ ]
    },
    "/card/status-activate" : {
      "post" : {
        "summary" : "Activates a previously ordered card, pn_card_order for details on how to order a card.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardStatusActivate",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card status",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardStatusActivate",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatusActivateResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Activated"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatusActivateRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id" ],
            "properties" : {
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call activates a previously ordered card.",
          "required" : true
        } ],
        "tags" : [ "card status" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/status-activate",
      "parameters" : [ ]
    },
    "/corporate/update" : {
      "post" : {
        "summary" : "Updates the active address of a corporate.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCorporateUpdate",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.corporates",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCorporateUpdate",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCorporateUpdateResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Updated"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCorporateUpdateRequest",
            "type" : "object",
            "required" : [ "active_address", "corporate_client_code", "entity_id" ],
            "properties" : {
              "corporate_client_code" : {
                "type" : "object"
              },
              "active_address" : {
                "type" : "object"
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call updates the active address for a corporate that is uniquely identified by the corporate_client_code.",
          "required" : true
        } ],
        "tags" : [ "corporates" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/corporate/update",
      "parameters" : [ ]
    },
    "/direct-debit/refund" : {
      "post" : {
        "summary" : "Request the refund of funds, collected by direct debit, up to 13 months after collection.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postDirectDebitRefund",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.direct debits (Coming to your Sandbox soon!)",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postDirectDebitRefund",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostDirectDebitRefundResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "reject_reason" : {
                  "minLength" : 1,
                  "description" : "String describing why the refund request was rejected. E.g. \"Mandate Not Found\", \"Transaction Not Found\", \"Transaction older than 13 months\".",
                  "type" : "string",
                  "maxLength" : 100
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "status" : {
                  "minLength" : 1,
                  "description" : "Indication of whether the request was valid (true) or invalid (false)",
                  "type" : "string",
                  "maxLength" : 1
                }
              }
            },
            "description" : "Requested"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostDirectDebitRefundRequest",
            "type" : "object",
            "required" : [ "client_code", "entity_id", "mandate_id", "transaction_id" ],
            "properties" : {
              "transaction_id" : {
                "type" : "object"
              },
              "mandate_id" : {
                "type" : "object"
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "client_code" : {
                "type" : "object"
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call requests a direct debit refund.",
          "required" : true
        } ],
        "tags" : [ "direct debits (Coming to your Sandbox soon!)" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/direct-debit/refund",
      "parameters" : [ ]
    },
    "/virtual-account/status-block" : {
      "post" : {
        "summary" : "Temporarily blocks a virtual account from making and/or recieving payments.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postVirtualAccountStatusBlock",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.virtual accounts",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postVirtualAccountStatusBlock",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountStatusBlockResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "virtual_account_ref" : {
                  "minLength" : 1,
                  "description" : "Reference ID of the virtual account",
                  "type" : "string",
                  "maxLength" : 20
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Blocked"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountStatusBlockRequest",
            "type" : "object",
            "required" : [ "entity_id", "virtual_account_ref" ],
            "properties" : {
              "block_type" : {
                "minLength" : 1,
                "description" : "Represents the type of block to instate. Possible values are: BLI (Inbound Payments are blocked), BLO (Outbound Payments are blocked), BLK (Inbound and Outbound payments are blocked). If empty, block_type defaults to blocked).",
                "type" : "string",
                "maxLength" : 50,
                "enum" : [ "BLI", "BLO", "BLK", null ]
              },
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call instates a block on an account to prevent the account making and/or recieving payments. Other functions can still be allowed depending on the block type selected.",
          "required" : true
        } ],
        "tags" : [ "virtual accounts" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/virtual-account/status-block",
      "parameters" : [ ]
    },
    "/card/pin-info-link" : {
      "post" : {
        "summary" : "Provides a secured link to deliver virtual card details for a specific Ipv4 IP.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardPinInfoLink",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card management",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardPinInfoLink",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardPinInfoLinkResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "secured_url" : {
                  "minLength" : 1,
                  "description" : "The link contains a secure token that will be useable just one time and will expire in the next 15 minutes. The server will only accept a connection from the client with the correct Ipv4. For R action, when you perform a HTTP GET from this URL, the JSON returned will return the PIN details in card_pin format. For M action, the PIN data must be posted to the URL in the format of card_pin.",
                  "type" : "string",
                  "maxLength" : 255
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Success"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardPinInfoLinkRequest",
            "type" : "object",
            "required" : [ "client_ip", "entity_id" ],
            "properties" : {
              "action" : {
                "minLength" : 1,
                "description" : "     - R: for retrieve - M: for modify (default is retrieve)",
                "type" : "string",
                "maxLength" : 1,
                "enum" : [ "R", "M", null ]
              },
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "client_ip" : {
                "minLength" : 7,
                "description" : "IPV4 of the client. Format example a.b.c.d",
                "type" : "string",
                "maxLength" : 15
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call provides a secure link.",
          "required" : true
        } ],
        "tags" : [ "card management" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/pin-info-link",
      "parameters" : [ ]
    },
    "/card/statement" : {
      "post" : {
        "summary" : "Returns the transaction information for a card.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardStatement",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card financial",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardStatement",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatementResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "balances" : {
                  "type" : "object",
                  "properties" : {
                    "product_id" : {
                      "minLength" : 15,
                      "description" : "Bankable reference of the operation.",
                      "type" : "string",
                      "maxLength" : 15
                    },
                    "card_available_amount" : {
                      "type" : "object"
                    },
                    "card_pending_amount" : {
                      "type" : "object"
                    },
                    "card_curr" : {
                      "minLength" : 3,
                      "description" : "Currency. ISO 3 characters code.",
                      "type" : "string",
                      "maxLength" : 3
                    },
                    "card_balance" : {
                      "type" : "object"
                    }
                  }
                },
                "nb_txns_ret" : {
                  "format" : "int32",
                  "description" : "Number of transactions returned.",
                  "type" : "integer"
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "transactions" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "transaction_rrn" : {
                        "minLength" : 1,
                        "description" : "Reference Number",
                        "type" : "string",
                        "maxLength" : 12
                      },
                      "country" : {
                        "minLength" : 2,
                        "description" : "Two-character ISO alphabetic code. Examples: FR / GB. If left blank, the country of the client will be used.",
                        "type" : "string",
                        "maxLength" : 2
                      },
                      "merchant_code" : {
                        "minLength" : 1,
                        "description" : "Merchant Code",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "original_transaction" : {
                        "type" : "object",
                        "properties" : {
                          "amount" : {
                            "type" : "object"
                          },
                          "amount_billed" : {
                            "type" : "object"
                          },
                          "debit_or_credit" : {
                            "minLength" : 2,
                            "description" : "-1 for debit and +1 for credit.",
                            "type" : "string",
                            "maxLength" : 2,
                            "enum" : [ "-1", "+1" ]
                          },
                          "fx_rate" : {
                            "minLength" : 1,
                            "description" : "The FX rate expressed as amount/amount_billed",
                            "type" : "string",
                            "maxLength" : 21
                          }
                        }
                      },
                      "merchant_city" : {
                        "type" : "object"
                      },
                      "auth" : {
                        "minLength" : 1,
                        "description" : "Flag if the transaction has been authorised before the settlement.",
                        "type" : "string",
                        "maxLength" : 1
                      },
                      "description" : {
                        "type" : "object"
                      },
                      "type" : {
                        "format" : "int32",
                        "description" : "The type of the transaction: 0: Internal 1: Purchase 2: ATM Cash 3: Cashback 4: Offline Balance Collection 5: ATM Balance 6: Purchase Reversal 7: ATM Reversal 8: TopUp 9: Transfer 10: Adjustment 11: Refund 12: Reimbursment",
                        "type" : "integer"
                      },
                      "mcc" : {
                        "minLength" : 1,
                        "description" : "Merchant Category Code",
                        "type" : "string",
                        "maxLength" : 4
                      },
                      "proc_date_time" : {
                        "type" : "object"
                      },
                      "id" : {
                        "minLength" : 1,
                        "description" : "Unique id of the transaction. The transaction keeps this id all along its life. The other references can change depending on the status.",
                        "type" : "string",
                        "maxLength" : 20
                      },
                      "transaction_date_time" : {
                        "type" : "object"
                      },
                      "merchant_terminal_id" : {
                        "minLength" : 1,
                        "description" : "Merchant terminal code from ISO message",
                        "type" : "string",
                        "maxLength" : 8
                      },
                      "amount" : {
                        "minLength" : 1,
                        "description" : "Maximum limit amount for the corporate. Decimal separator \".\" (point). Thousand separator; none.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "fx_fee_amount" : {
                        "type" : "object"
                      },
                      "settlement_date" : {
                        "type" : "object"
                      },
                      "debit_or_credit" : {
                        "minLength" : 2,
                        "description" : "-1 for debit and +1 for credit.",
                        "type" : "string",
                        "maxLength" : 2,
                        "enum" : [ "-1", "+1" ]
                      },
                      "billing_curr" : {
                        "type" : "object"
                      },
                      "merchant_name" : {
                        "minLength" : 1,
                        "description" : "Merchant Name",
                        "type" : "string",
                        "maxLength" : 22
                      },
                      "reject_description" : {
                        "minLength" : 1,
                        "description" : "In case of declined transaction, reject description if available.",
                        "type" : "string",
                        "maxLength" : 255
                      },
                      "local_date" : {
                        "type" : "object"
                      },
                      "merchant_street" : {
                        "type" : "object"
                      },
                      "fee_amount" : {
                        "type" : "object"
                      },
                      "amount_billed" : {
                        "type" : "object"
                      },
                      "total_amount" : {
                        "type" : "object"
                      },
                      "merchant_state" : {
                        "type" : "object"
                      },
                      "local_date_time" : {
                        "type" : "object"
                      },
                      "merchant_country" : {
                        "type" : "object"
                      },
                      "card_client_code" : {
                        "minLength" : 13,
                        "description" : "Reference id of the card",
                        "type" : "string",
                        "maxLength" : 13
                      },
                      "transaction_curr" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      },
                      "status" : {
                        "format" : "int32",
                        "description" : "The status of the transaction: 0: Pending 1: Settled 2: Declined 3: Reversal 4: Approved 5: Release 6: Dispute 99: Deleted",
                        "type" : "integer"
                      },
                      "transaction_ref" : {
                        "minLength" : 1,
                        "description" : "Reference of the transaction",
                        "type" : "string",
                        "maxLength" : 20
                      }
                    }
                  }
                }
              }
            },
            "description" : "Executed"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatementRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id", "nb_txns" ],
            "properties" : {
              "end_date" : {
                "type" : "object"
              },
              "all_txns" : {
                "format" : "int32",
                "description" : "0 ; do not retrieve transactions with 99 status1 ; retrieve all transactions (even transaction with status 99)If not set, do not retrieve transactions with 99 status.",
                "type" : "integer"
              },
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "nb_txns" : {
                "format" : "int32",
                "description" : "Number of the most recent transactions needed.If set, the selection window is not used.At least nb_txns or start_date must be provided.",
                "type" : "integer"
              },
              "start_date" : {
                "type" : "object"
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call returns the transaction information for a card.",
          "required" : true
        } ],
        "tags" : [ "card financial" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/statement",
      "parameters" : [ ]
    },
    "/iban/status-cancel" : {
      "post" : {
        "summary" : "Cancels a set of virtual accounts by BIC/IBAN and prevents them from being able to send/receive payments permanently. No further functions will be allowed on these accounts.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postIbanStatusCancel",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.IBAN Management",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postIbanStatusCancel",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostIbanStatusCancelResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "iban" : {
                  "minLength" : 0,
                  "description" : "The International Bank Account Number.",
                  "type" : "string",
                  "maxLength" : 34
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "bic" : {
                  "minLength" : 8,
                  "description" : "The BIC code of the Bank where the account is held.",
                  "type" : "string",
                  "maxLength" : 11
                }
              }
            },
            "description" : "Blocked"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostIbanStatusCancelRequest",
            "type" : "object",
            "required" : [ "bic", "entity_id", "iban" ],
            "properties" : {
              "iban" : {
                "minLength" : 0,
                "description" : "The International Bank Account Number.",
                "type" : "string",
                "maxLength" : 34
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "bic" : {
                "minLength" : 8,
                "description" : "The BIC code of the Bank where the account is held.",
                "type" : "string",
                "maxLength" : 11
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call cancels a set of virtual accounts by BIC/IBAN.",
          "required" : true
        } ],
        "tags" : [ "IBAN Management" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/iban/status-cancel",
      "parameters" : [ ]
    },
    "/card/info" : {
      "post" : {
        "summary" : "Retrieve the detailed information relating to a specific card.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardInfo",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card management",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardInfo",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardInfoResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "card_sequence" : {
                  "minLength" : 3,
                  "description" : "If design of the card is asking for sequence, then a 3 digit number will be generated. This number is unique for any card of the card holder.",
                  "type" : "string",
                  "maxLength" : 3
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "deny_mcc" : {
                  "minLength" : 1,
                  "description" : "Comma separated list of MCC codes that should be denied. To define a range of MCC, separate the first and last MCC by a minus. Not available on all the markets",
                  "type" : "string",
                  "maxLength" : 192
                },
                "card_line_4" : {
                  "minLength" : 1,
                  "description" : "Free text field. For line 4 variable data. A regular expression for control will put in place.",
                  "type" : "string",
                  "maxLength" : 30
                },
                "product_id" : {
                  "minLength" : 1,
                  "description" : "Product reference",
                  "type" : "string",
                  "maxLength" : 50
                },
                "deny_service" : {
                  "minLength" : 1,
                  "description" : "Comma separated list of services (authorisation transaction types) that should be denied for the card: 0 - Sale (Goods & services) 1 - Cash 9 - Sale with cashback Not available on all markets",
                  "type" : "string",
                  "maxLength" : 100
                },
                "card_visible_number" : {
                  "minLength" : 11,
                  "description" : "Characters showing part of the PAN (first 4 characters * last 4 characters)",
                  "type" : "string",
                  "maxLength" : 11
                },
                "expiry_renew" : {
                  "format" : "int32",
                  "description" : " 0: do not renew at card expiration 1: automatic renewal at card expiration",
                  "type" : "integer"
                },
                "profile" : {
                  "minLength" : 1,
                  "description" : "Profile of limits, velocities, and fees of the virtual account. Not available on all packages.",
                  "type" : "string",
                  "maxLength" : 20
                },
                "market_id" : {
                  "minLength" : 1,
                  "description" : "Market reference of the card.",
                  "type" : "string",
                  "maxLength" : 20
                },
                "card_client_code_prev" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "wallet_client_code" : {
                  "minLength" : 1,
                  "description" : "Code of the account to be used to authorise transactions against. The virtual account reference linked to the debit card. Not available on all the markets.",
                  "type" : "string",
                  "maxLength" : 20
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "card_type" : {
                  "minLength" : 1,
                  "description" : "V (uppercase V) for virtual P (uppercase P) for physical",
                  "type" : "string",
                  "maxLength" : 1
                },
                "card_exp_date" : {
                  "minLength" : 10,
                  "description" : "The expiry date of the card (format yyyy-mm-dd).",
                  "type" : "string",
                  "maxLength" : 10
                },
                "card_status" : {
                  "minLength" : 3,
                  "description" : "Status of the card.",
                  "type" : "string",
                  "maxLength" : 3,
                  "enum" : [ "ACT", "BLO", "LOS", "NEW", "STO", "DAM", "EXP", "CAN", "REA", "PRE", "CBL", "CMD", "ABO" ]
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "design_id" : {
                  "minLength" : 1,
                  "description" : "The card design reference of the card that is being created. The relevant designs will be provided by Bankable.",
                  "type" : "string",
                  "maxLength" : 20
                },
                "limit_rules" : {
                  "type" : "object"
                },
                "corporate_id" : {
                  "minLength" : 1,
                  "description" : "Corporate Identity. If set, the future virtual account will be attached to the corporate. Otherwise, it will be attached to the default coporate of the distributor. Every virtual account that gets created will be associated to a corporate Identity.",
                  "type" : "string",
                  "maxLength" : 20
                },
                "card_name" : {
                  "minLength" : 1,
                  "description" : "The name to appear on the card. If omitted then the card name will be composed by: <first_name><><last_name> or if abbreviation is needed <first letter of first_name><><last_name>. The field length can vary depending on the card design and is also restricted to a maximum of 21 if the provider is Marqeta.",
                  "type" : "string",
                  "maxLength" : 27
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "image_id" : {
                  "minLength" : 1,
                  "description" : "ID of a predefined image",
                  "type" : "string",
                  "maxLength" : 16
                },
                "digital_wallet_tokens" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "token_requestor_name" : {
                        "minLength" : 1,
                        "description" : "Name of the token provider.",
                        "type" : "string",
                        "maxLength" : 50
                      },
                      "state_reason" : {
                        "minLength" : 1,
                        "description" : "Reason for state of the token",
                        "type" : "string",
                        "maxLength" : 255
                      },
                      "fulfillment_status" : {
                        "minLength" : 1,
                        "description" : "The digital wallet token provisioning status: Allowable Values: DECISION_RED, DECISION_YELLOW, DECISION_GREEN, REJECTED, PROVISIONED",
                        "type" : "string",
                        "maxLength" : 20
                      },
                      "state" : {
                        "minLength" : 1,
                        "description" : "State of the token Allowable Values: REQUESTED, REQUEST_DECLINED, ACTIVE, SUSPENDED, TERMINATED",
                        "type" : "string",
                        "maxLength" : 16
                      },
                      "digital_wallet_token" : {
                        "minLength" : 1,
                        "description" : "Unique ID of the token",
                        "type" : "string",
                        "maxLength" : 36
                      },
                      "device" : {
                        "type" : "object",
                        "properties" : {
                          "tel_no" : {
                            "minLength" : 1,
                            "description" : "The primary household landline telephone number of the consumer.",
                            "type" : "string",
                            "maxLength" : 20
                          },
                          "name" : {
                            "minLength" : 1,
                            "description" : "Name of the device the token is linked to.",
                            "type" : "string",
                            "maxLength" : 50
                          },
                          "language" : {
                            "minLength" : 3,
                            "description" : "The communication language requested by the consumer following ISO 639-2 language code. E.g. eng - English.",
                            "type" : "string",
                            "maxLength" : 3
                          },
                          "location" : {
                            "minLength" : 3,
                            "description" : "Latitude and Longitude of the device.",
                            "type" : "string",
                            "maxLength" : 30
                          },
                          "id" : {
                            "minLength" : 1,
                            "description" : "Device ID if available.",
                            "type" : "string",
                            "maxLength" : 50
                          },
                          "ip_address" : {
                            "minLength" : 7,
                            "description" : "IP address of the device.",
                            "type" : "string",
                            "maxLength" : 15
                          },
                          "type" : {
                            "type" : "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description" : "Retrieved"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardInfoRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id" ],
            "properties" : {
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call retrieves card information.",
          "required" : true
        } ],
        "tags" : [ "card management" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/info",
      "parameters" : [ ]
    },
    "/virtual-account/consumer-add" : {
      "post" : {
        "summary" : "Assigns additional consumers to jointly own an already created consumer virtual account, specified by reference.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postVirtualAccountConsumerAdd",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.virtual accounts",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postVirtualAccountConsumerAdd",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountConsumerAddResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Added"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountConsumerAddRequest",
            "type" : "object",
            "required" : [ "ch_client_code", "entity_id", "virtual_account_ref" ],
            "properties" : {
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "ch_client_code" : {
                "minLength" : 1,
                "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                "type" : "string",
                "maxLength" : 50
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call assigns an additional consumer to an already created consumer virtual account.",
          "required" : true
        } ],
        "tags" : [ "virtual accounts" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/virtual-account/consumer-add",
      "parameters" : [ ]
    },
    "/iban/status-block" : {
      "post" : {
        "summary" : "Blocks a set of virtual accounts by BIC/IBAN and prevents them from being able to send/receive payments. Other functions are still allowed, based on the block type selected (i.e. BLI - BLO - BLK).",
        "x-WM-METHOD_NAME" : "BNKAccounts_postIbanStatusBlock",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.IBAN Management",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postIbanStatusBlock",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostIbanStatusBlockResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "iban" : {
                  "minLength" : 0,
                  "description" : "The International Bank Account Number.",
                  "type" : "string",
                  "maxLength" : 34
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "bic" : {
                  "minLength" : 8,
                  "description" : "The BIC code of the Bank where the account is held.",
                  "type" : "string",
                  "maxLength" : 11
                }
              }
            },
            "description" : "Blocked"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostIbanStatusBlockRequest",
            "type" : "object",
            "required" : [ "bic", "block_type", "entity_id", "iban" ],
            "properties" : {
              "block_type" : {
                "minLength" : 1,
                "description" : "Represents the type of block to instate. Possible values are: BLI (Inbound Payments are blocked), BLO (Outbound Payments are blocked), BLK (Inbound and Outbound payments are blocked). If empty, block_type defaults to blocked).",
                "type" : "string",
                "maxLength" : 50,
                "enum" : [ "BLI", "BLO", "BLK", null ]
              },
              "iban" : {
                "minLength" : 0,
                "description" : "The International Bank Account Number.",
                "type" : "string",
                "maxLength" : 34
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "bic" : {
                "minLength" : 8,
                "description" : "The BIC code of the Bank where the account is held.",
                "type" : "string",
                "maxLength" : 11
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call blocks a set of virtual accounts by BIC/IBAN.",
          "required" : true
        } ],
        "tags" : [ "IBAN Management" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/iban/status-block",
      "parameters" : [ ]
    },
    "/region/create" : {
      "post" : {
        "summary" : "Create a region constraint based on the list of countries specified by their 2-letter ISO code.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postRegionCreate",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.limits",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postRegionCreate",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostRegionCreateResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "region_code" : {
                  "minLength" : 4,
                  "description" : "Region code (group of countries) to which the limit rules are to be applied. Must be present if no country is specified.",
                  "type" : "string",
                  "maxLength" : 22
                }
              }
            },
            "description" : "Created"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostRegionCreateRequest",
            "type" : "object",
            "required" : [ "country_list", "entity_id", "region_name" ],
            "properties" : {
              "region_name" : {
                "minLength" : 1,
                "description" : "Name of the region.",
                "type" : "string",
                "maxLength" : 45
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "country_list" : {
                "minLength" : 2,
                "description" : "Country list to be provided in ISO format separated by comma (,). Example FR,GB,NL.",
                "type" : "string",
                "maxLength" : 400
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call creates a region.",
          "required" : true
        } ],
        "tags" : [ "limits" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/region/create",
      "parameters" : [ ]
    },
    "/iban/account-list" : {
      "post" : {
        "summary" : "Retrieves the account information and status of all virtual accounts linked to an IBAN.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postIbanAccountList",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.IBAN Management",
        "produces" : [ "application/json" ],
        "x-WM-OPERATION_TYPE" : "create",
        "operationId" : "BNKAccounts_postIbanAccountList",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostIbanAccountListResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "virtual_account_list" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "account" : {
                        "type" : "object"
                      }
                    }
                  }
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Retrieved"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostIbanAccountListRequest",
            "type" : "object",
            "required" : [ "entity_id", "iban" ],
            "properties" : {
              "iban" : {
                "minLength" : 0,
                "description" : "The International Bank Account Number.",
                "type" : "string",
                "maxLength" : 34
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call retrieves all information related to all virtual accounts linked to a specific IBAN.",
          "required" : true
        } ],
        "tags" : [ "IBAN Management" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/iban/account-list",
      "parameters" : [ ]
    },
    "/virtual-account/info" : {
      "post" : {
        "summary" : "Retrieves the account information and state of a virtual account.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postVirtualAccountInfo",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.virtual accounts",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postVirtualAccountInfo",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountInfoResponse",
              "type" : "object",
              "properties" : {
                "package_code" : {
                  "minLength" : 1,
                  "description" : "The package that defines the payment schemes and limits for the account.",
                  "type" : "string",
                  "maxLength" : 20
                },
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "virtual_account_name" : {
                  "minLength" : 1,
                  "description" : "Account name",
                  "type" : "string",
                  "maxLength" : 200
                },
                "physical_account_info" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                },
                "virtual_account_curr" : {
                  "minLength" : 3,
                  "description" : "Currency. ISO 3 characters code.",
                  "type" : "string",
                  "maxLength" : 3
                },
                "limit_rules" : {
                  "type" : "object"
                },
                "virtual_account_ref" : {
                  "minLength" : 1,
                  "description" : "Reference ID of the virtual account",
                  "type" : "string",
                  "maxLength" : 20
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "virtual_account_status" : {
                  "minLength" : 1,
                  "description" : "The status options are: - EXP: Expired - ACT: Active - CAN: Cancelled - BLK: Blocked from receiving inbound paments and from making outbound payments - BLI: Blocked from receiving inbound payments - BLO: Blocked from making outbound payments",
                  "type" : "string",
                  "maxLength" : 3,
                  "enum" : [ "EXP", "ACT", "CAN", "BLK", "BLI", "BLO" ]
                },
                "ch_client_code" : {
                  "minLength" : 1,
                  "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                  "type" : "string",
                  "maxLength" : 50
                }
              }
            },
            "description" : "Information Retrieved"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountInfoRequest",
            "type" : "object",
            "required" : [ "entity_id", "virtual_account_ref" ],
            "properties" : {
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call retrieves information on a virtual account and the account state.",
          "required" : true
        } ],
        "tags" : [ "virtual accounts" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/virtual-account/info",
      "parameters" : [ ]
    },
    "/iban/status-unblock" : {
      "post" : {
        "summary" : "Unblocks a set of virtual accounts by BIC/IBAN and allows them to be able to send/receive payments. Other functions are still allowed, based on the block type selected (i.e. BLI - BLO - BLK).",
        "x-WM-METHOD_NAME" : "BNKAccounts_postIbanStatusUnblock",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.IBAN Management",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postIbanStatusUnblock",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostIbanStatusUnblockResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "iban" : {
                  "minLength" : 0,
                  "description" : "The International Bank Account Number.",
                  "type" : "string",
                  "maxLength" : 34
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "bic" : {
                  "minLength" : 8,
                  "description" : "The BIC code of the Bank where the account is held.",
                  "type" : "string",
                  "maxLength" : 11
                }
              }
            },
            "description" : "Unblocked"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostIbanStatusUnblockRequest",
            "type" : "object",
            "required" : [ "bic", "entity_id", "iban" ],
            "properties" : {
              "unblock_type" : {
                "minLength" : 1,
                "description" : "Represents the type of block to instate. Possible values are: BLI (Inbound Payments are blocked), BLO (Outbound Payments are blocked), BLK (Inbound and Outbound payments are blocked). If empty, block_type defaults to blocked).",
                "type" : "string",
                "maxLength" : 50,
                "enum" : [ "BLI", "BLO", "BLK", null ]
              },
              "iban" : {
                "minLength" : 0,
                "description" : "The International Bank Account Number.",
                "type" : "string",
                "maxLength" : 34
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "bic" : {
                "minLength" : 8,
                "description" : "The BIC code of the Bank where the account is held.",
                "type" : "string",
                "maxLength" : 11
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call unblocks a set of virtual accounts by BIC/IBAN.",
          "required" : true
        } ],
        "tags" : [ "IBAN Management" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/iban/status-unblock",
      "parameters" : [ ]
    },
    "/consumer/update" : {
      "post" : {
        "summary" : "Updates or changes a consumer's details using ch_client_code.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postConsumerUpdate",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.consumer",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postConsumerUpdate",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostConsumerUpdateResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "ch_client_code" : {
                  "minLength" : 1,
                  "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                  "type" : "string",
                  "maxLength" : 50
                }
              }
            },
            "description" : "Created"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostConsumerUpdateRequest",
            "type" : "object",
            "required" : [ "ch_client_code", "entity_id" ],
            "properties" : {
              "address" : {
                "type" : "object"
              },
              "gender" : {
                "minLength" : 1,
                "description" : "Gender of individual",
                "type" : "string",
                "maxLength" : 1,
                "enum" : [ "M", "F", "S", "X" ]
              },
              "date_of_birth" : {
                "minLength" : 10,
                "description" : "Date of birth of the individual, formatted yyyy-mm-dd.",
                "type" : "string",
                "maxLength" : 10
              },
              "mobile_no" : {
                "minLength" : 1,
                "description" : "Mandatory for 3D- Secure e-commerce payments. Mobile number of the individual.",
                "type" : "string",
                "maxLength" : 20
              },
              "last_name" : {
                "minLength" : 1,
                "description" : "Contact Last Name or Department",
                "type" : "string",
                "maxLength" : 50
              },
              "language" : {
                "minLength" : 2,
                "description" : "The communication language requested by the consumer following ISO 639-1 language code. E.g. en - English.",
                "type" : "string",
                "maxLength" : 2
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "ch_client_code" : {
                "minLength" : 1,
                "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                "type" : "string",
                "maxLength" : 50
              },
              "tel_no" : {
                "minLength" : 1,
                "description" : "The primary household landline telephone number of the consumer.",
                "type" : "string",
                "maxLength" : 20
              },
              "tel_ext" : {
                "minLength" : 1,
                "description" : "Country Code extension for landline telephone number.",
                "type" : "string",
                "maxLength" : 5
              },
              "first_name" : {
                "minLength" : 1,
                "description" : "Contact First Name or Department",
                "type" : "string",
                "maxLength" : 50
              },
              "email" : {
                "minLength" : 1,
                "description" : "The email address of the individual.",
                "type" : "string",
                "maxLength" : 150
              },
              "mobile_ext" : {
                "minLength" : 1,
                "description" : "Country Code extension for mobile telephone number.",
                "type" : "string",
                "maxLength" : 5
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call updates a consumer.",
          "required" : true
        } ],
        "tags" : [ "consumer" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/consumer/update",
      "parameters" : [ ]
    },
    "/card-holder/update" : {
      "post" : {
        "summary" : "Updates the card and client information for a specified card holder.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardHolderUpdate",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card management",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardHolderUpdate",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardHolderUpdateResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "ch_client_code" : {
                  "minLength" : 1,
                  "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                  "type" : "string",
                  "maxLength" : 50
                }
              }
            },
            "description" : "Updated"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardHolderUpdateRequest",
            "type" : "object",
            "required" : [ "cardholder", "ch_client_code", "entity_id" ],
            "properties" : {
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "cardholder" : {
                "type" : "object",
                "properties" : {
                  "delivery_address" : {
                    "type" : "object"
                  },
                  "address" : {
                    "type" : "object"
                  },
                  "gender" : {
                    "minLength" : 1,
                    "description" : "Gender of individual",
                    "type" : "string",
                    "maxLength" : 1,
                    "enum" : [ "M", "F", "S", "X" ]
                  },
                  "date_of_birth" : {
                    "minLength" : 10,
                    "description" : "Date of birth of the individual, formatted yyyy-mm-dd.",
                    "type" : "string",
                    "maxLength" : 10
                  },
                  "mobile_no" : {
                    "minLength" : 1,
                    "description" : "Mandatory for 3D- Secure e-commerce payments. Mobile number of the individual.",
                    "type" : "string",
                    "maxLength" : 20
                  },
                  "last_name" : {
                    "minLength" : 1,
                    "description" : "Contact Last Name or Department",
                    "type" : "string",
                    "maxLength" : 50
                  },
                  "language" : {
                    "minLength" : 2,
                    "description" : "The communication language requested by the consumer following ISO 639-1 language code. E.g. en - English.",
                    "type" : "string",
                    "maxLength" : 2
                  },
                  "tel_no" : {
                    "minLength" : 1,
                    "description" : "The primary household landline telephone number of the consumer.",
                    "type" : "string",
                    "maxLength" : 20
                  },
                  "tel_ext" : {
                    "minLength" : 1,
                    "description" : "Country Code extension for landline telephone number.",
                    "type" : "string",
                    "maxLength" : 5
                  },
                  "miduserid" : {
                    "minLength" : 39,
                    "description" : "Modirum User ID for 3D Secure SDK users",
                    "type" : "string",
                    "maxLength" : 39
                  },
                  "first_name" : {
                    "minLength" : 1,
                    "description" : "Contact First Name or Department",
                    "type" : "string",
                    "maxLength" : 50
                  },
                  "email" : {
                    "minLength" : 1,
                    "description" : "The email address of the individual.",
                    "type" : "string",
                    "maxLength" : 150
                  },
                  "mobile_ext" : {
                    "minLength" : 1,
                    "description" : "Country Code extension for mobile telephone number.",
                    "type" : "string",
                    "maxLength" : 5
                  },
                  "mobile_add" : {
                    "type" : "object",
                    "properties" : {
                      "mobile_no" : {
                        "minLength" : 1,
                        "description" : "Mandatory for 3D- Secure e-commerce payments. Mobile number of the individual.",
                        "type" : "string",
                        "maxLength" : 20
                      },
                      "mobile_ext" : {
                        "minLength" : 1,
                        "description" : "Country Code extension for mobile telephone number.",
                        "type" : "string",
                        "maxLength" : 5
                      }
                    }
                  }
                }
              },
              "ch_client_code" : {
                "minLength" : 1,
                "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                "type" : "string",
                "maxLength" : 50
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call updates a cardholder.",
          "required" : true
        } ],
        "tags" : [ "card management" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card-holder/update",
      "parameters" : [ ]
    },
    "/profile/info" : {
      "post" : {
        "summary" : "Return the details of the specified profile (profile_code).",
        "x-WM-METHOD_NAME" : "BNKAccounts_postProfileInfo",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.limits",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postProfileInfo",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostProfileInfoResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "limit_rules" : {
                  "type" : "object"
                },
                "profile_code" : {
                  "minLength" : 1,
                  "description" : "Profile of limits, velocities, and fees of the virtual account. Not available on all packages.",
                  "type" : "string",
                  "maxLength" : 20
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Returned"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostProfileInfoRequest",
            "type" : "object",
            "required" : [ "entity_id", "profile_code" ],
            "properties" : {
              "profile_code" : {
                "minLength" : 1,
                "description" : "Profile of limits, velocities, and fees of the virtual account. Not available on all packages.",
                "type" : "string",
                "maxLength" : 20
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call returns details of a specified profile.",
          "required" : true
        } ],
        "tags" : [ "limits" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/profile/info",
      "parameters" : [ ]
    },
    "/virtual-account/status-unblock" : {
      "post" : {
        "summary" : "Unblocks a blocked virtual account and sets the account status to active.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postVirtualAccountStatusUnblock",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.virtual accounts",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postVirtualAccountStatusUnblock",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountStatusUnblockResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "virtual_account_ref" : {
                  "minLength" : 1,
                  "description" : "Reference ID of the virtual account",
                  "type" : "string",
                  "maxLength" : 20
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Unblocked"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountStatusUnblockRequest",
            "type" : "object",
            "required" : [ "entity_id", "virtual_account_ref" ],
            "properties" : {
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call sets the status of a blocked account to active (ACT).",
          "required" : true
        } ],
        "tags" : [ "virtual accounts" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/virtual-account/status-unblock",
      "parameters" : [ ]
    },
    "/geo-profile/create" : {
      "post" : {
        "summary" : "Used to create a restricted region",
        "x-WM-METHOD_NAME" : "BNKAccounts_postGeoProfileCreate",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.geo blocking and restricted countries",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postGeoProfileCreate",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostGeoProfileCreateResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "geo_profile_code" : {
                  "minLength" : 8,
                  "description" : "Unique Identifier of geo profile",
                  "type" : "string",
                  "maxLength" : 20
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Region created"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostGeoProfileCreateRequest",
            "type" : "object",
            "required" : [ "entity_id", "geo_profile_name", "region_code" ],
            "properties" : {
              "geo_profile_name" : {
                "minLength" : 1,
                "description" : "Name of the geo profile",
                "type" : "string",
                "maxLength" : 45
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "region_code" : {
                "type" : "object"
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call create a restricted region",
          "required" : true
        } ],
        "tags" : [ "geo blocking and restricted countries" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/geo-profile/create",
      "parameters" : [ ]
    },
    "/card/geo-profile-set" : {
      "post" : {
        "summary" : "Link a restricted region to a card.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardGeoProfileSet",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.geo blocking and restricted countries",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardGeoProfileSet",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardGeoProfileSetResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "geo_profile_code" : {
                  "minLength" : 8,
                  "description" : "Unique Identifier of geo profile",
                  "type" : "string",
                  "maxLength" : 20
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Region linked to the card"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardGeoProfileSetRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id", "geo_profile_code" ],
            "properties" : {
              "geo_profile_code" : {
                "minLength" : 8,
                "description" : "Unique Identifier of geo profile",
                "type" : "string",
                "maxLength" : 20
              },
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call link a restricted region to a card.",
          "required" : true
        } ],
        "tags" : [ "geo blocking and restricted countries" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/geo-profile-set",
      "parameters" : [ ]
    },
    "/core/transac-clear" : {
      "post" : {
        "summary" : "For each call to the Bankable API, a client can optionally include a client_transac_id to uniquely identify the API call being made. Should you wish to reuse a client_transac_id, you will need to clear it as these IDs are unique and duplicates will be rejected.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCoreTransacClear",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.core",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCoreTransacClear",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCoreTransacClearResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Cleared"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCoreTransacClearRequest",
            "type" : "object",
            "required" : [ "client_transac_id_clear", "entity_id" ],
            "properties" : {
              "client_transac_id_clear" : {
                "type" : "object"
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call clears a client_transac_id in order for it to be reused.",
          "required" : true
        } ],
        "tags" : [ "core" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/core/transac-clear",
      "parameters" : [ ]
    },
    "/card/country-unblock" : {
      "post" : {
        "summary" : "Allows a user/distributor to unblock a list countries, enabling card payments in these countries if they are not on the restricted list.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardCountryUnblock",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.geo blocking and restricted countries",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardCountryUnblock",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardCountryUnblockResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "country_code" : {
                  "type" : "object"
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Unblocked"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardCountryUnblockRequest",
            "type" : "object",
            "required" : [ "card_client_code", "country_code", "entity_id" ],
            "properties" : {
              "country_code" : {
                "type" : "object"
              },
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call allows a user/distributor to unblock a list countries, enabling card payments in these countries if they are not on the restricted list.",
          "required" : true
        } ],
        "tags" : [ "geo blocking and restricted countries" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/country-unblock",
      "parameters" : [ ]
    },
    "/virtual-account/payment" : {
      "post" : {
        "summary" : "Make outbound payments (to external accounts) for FPS and SEPA.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postVirtualAccountPayment",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.virtual accounts",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postVirtualAccountPayment",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountPaymentResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "virtual_account_ref" : {
                  "minLength" : 1,
                  "description" : "Reference ID of the virtual account",
                  "type" : "string",
                  "maxLength" : 20
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "operation_id" : {
                  "minLength" : 15,
                  "description" : "Bankable reference of the operation.",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Payment Made"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountPaymentRequest",
            "type" : "object",
            "required" : [ "amount", "currency", "entity_id", "international_payment", "virtual_account_ref" ],
            "properties" : {
              "account_number" : {
                "minLength" : 0,
                "description" : "UK account number for sending and recieving payments.",
                "type" : "string",
                "maxLength" : 30
              },
              "amount" : {
                "minLength" : 1,
                "description" : "Maximum limit amount for the corporate. Decimal separator \".\" (point). Thousand separator; none.",
                "type" : "string",
                "maxLength" : 21
              },
              "reference_issuer" : {
                "description" : "Format of the structured reference. Default ISO.",
                "type" : "string"
              },
              "beneficiary_reference" : {
                "minLength" : 1,
                "description" : "Communication text linked to the payment. Note that for SEPA payments, maximum length is 40 characters, or 35 for a structured reference.",
                "type" : "string",
                "maxLength" : 140
              },
              "address_1" : {
                "type" : "object"
              },
              "address_2" : {
                "type" : "object"
              },
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "structured_reference" : {
                "minLength" : 4,
                "description" : "Set to \"true\" to use structured remittance information with a SEPA payment, or \"false\" to leave as unstructured.",
                "type" : "string",
                "maxLength" : 5,
                "enum" : [ "true", "false", null ]
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "sort_code" : {
                "minLength" : 6,
                "description" : "UK sort code for sending and recieving payments.",
                "type" : "string",
                "maxLength" : 8
              },
              "international_payment" : {
                "minLength" : 4,
                "description" : "If false, then the payment is treated as domestic and uses the following payment rails dependent on the currency: EUR - SEPA GBP - FPS USD - ACH If true, the payment is treated as international and uses SWIFT. The default is Domestic.",
                "type" : "string",
                "maxLength" : 5,
                "enum" : [ "true", "false", null ]
              },
              "charging_option" : {
                "minLength" : 3,
                "description" : "Default - SHA - SHA - BEN - OUR If international_payment is not true then this value will be ignored",
                "type" : "string",
                "maxLength" : 3
              },
              "reference" : {
                "minLength" : 1,
                "description" : "Reference text linked to the payment.",
                "type" : "string",
                "maxLength" : 18
              },
              "country_code" : {
                "minLength" : 2,
                "description" : "Two-character ISO alphabetic code. Examples: FR / GB. If left blank, the country of the client will be used.",
                "type" : "string",
                "maxLength" : 2
              },
              "beneficiary" : {
                "minLength" : 1,
                "description" : "The beneficiary account holder.",
                "type" : "string",
                "maxLength" : 200
              },
              "payment_purpose" : {
                "minLength" : 2,
                "description" : "String reporesenting the purpose of the payment",
                "type" : "string",
                "maxLength" : 4
              },
              "account_name" : {
                "minLength" : 40,
                "description" : "Concatenated name of the account holder. Generated from First and Last name of the account holder. This will be included in outbound payments instruction.",
                "type" : "string",
                "maxLength" : 40
              },
              "iban" : {
                "minLength" : 0,
                "description" : "The International Bank Account Number.",
                "type" : "string",
                "maxLength" : 34
              },
              "currency" : {
                "minLength" : 3,
                "description" : "Currency. ISO 3 characters code.",
                "type" : "string",
                "maxLength" : 3
              },
              "bic" : {
                "minLength" : 8,
                "description" : "The BIC code of the Bank where the account is held.",
                "type" : "string",
                "maxLength" : 11
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call makes an outbound payment.",
          "required" : true
        } ],
        "tags" : [ "virtual accounts" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/virtual-account/payment",
      "parameters" : [ ]
    },
    "/iban/currency-add" : {
      "post" : {
        "summary" : "Adds an authorised currency to an existing IBAN.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postIbanCurrencyAdd",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.IBAN Management",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postIbanCurrencyAdd",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostIbanCurrencyAddResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "virtual_account_ref" : {
                  "minLength" : 1,
                  "description" : "Reference ID of the virtual account",
                  "type" : "string",
                  "maxLength" : 20
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Added"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostIbanCurrencyAddRequest",
            "type" : "object",
            "required" : [ "bic", "currency_code", "entity_id", "iban" ],
            "properties" : {
              "iban" : {
                "minLength" : 0,
                "description" : "The International Bank Account Number.",
                "type" : "string",
                "maxLength" : 34
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "bic" : {
                "minLength" : 8,
                "description" : "The BIC code of the Bank where the account is held.",
                "type" : "string",
                "maxLength" : 11
              },
              "currency_code" : {
                "minLength" : 3,
                "description" : "Currency. ISO 3 characters code.",
                "type" : "string",
                "maxLength" : 3
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call adds an authorised currency to an existing IBAN.",
          "required" : true
        } ],
        "tags" : [ "IBAN Management" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/iban/currency-add",
      "parameters" : [ ]
    },
    "/profile/create" : {
      "post" : {
        "summary" : "Create a spending limit profile on the platform.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postProfileCreate",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.limits",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postProfileCreate",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostProfileCreateResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "profile_code" : {
                  "minLength" : 1,
                  "description" : "Profile of limits, velocities, and fees of the virtual account. Not available on all packages.",
                  "type" : "string",
                  "maxLength" : 20
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Created"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostProfileCreateRequest",
            "type" : "object",
            "required" : [ "entity_id", "profile_name" ],
            "properties" : {
              "profile_name" : {
                "minLength" : 1,
                "description" : "Profile name for the platform limits and fees.",
                "type" : "string",
                "maxLength" : 50
              },
              "limit_rules" : {
                "type" : "object"
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call creates a spending limit profile.",
          "required" : true
        } ],
        "tags" : [ "limits" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/profile/create",
      "parameters" : [ ]
    },
    "/consumer/account-list" : {
      "post" : {
        "summary" : "Retrieves the account information and status of all virtual accounts linked to a consumer.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postConsumerAccountList",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.consumer",
        "produces" : [ "application/json" ],
        "x-WM-OPERATION_TYPE" : "create",
        "operationId" : "BNKAccounts_postConsumerAccountList",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostConsumerAccountListResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "virtual_account_list" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "account" : {
                        "type" : "object"
                      }
                    }
                  }
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Returned"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostConsumerAccountListRequest",
            "type" : "object",
            "required" : [ "ch_client_code", "entity_id" ],
            "properties" : {
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "ch_client_code" : {
                "minLength" : 1,
                "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                "type" : "string",
                "maxLength" : 50
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call retrieves all virtual accounts linked to a consumer.",
          "required" : true
        } ],
        "tags" : [ "consumer" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/consumer/account-list",
      "parameters" : [ ]
    },
    "/corporate/kyb-update" : {
      "post" : {
        "summary" : "Set a corporates KYB status and risk level on the Bankable platform.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCorporateKybUpdate",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.kyb",
        "produces" : [ "application/json" ],
        "x-WM-OPERATION_TYPE" : "create",
        "operationId" : "BNKAccounts_postCorporateKybUpdate",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCorporateKybUpdateResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "enable_outbound_payments" : {
                  "minLength" : 4,
                  "description" : "true â Make and receive false â Receive only",
                  "type" : "string",
                  "maxLength" : 5
                },
                "corporate_client_code" : {
                  "minLength" : 20,
                  "description" : "The corporate client code (unique identifier) of the corporate.",
                  "type" : "string",
                  "maxLength" : 20
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Set"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCorporateKybUpdateRequest",
            "type" : "object",
            "required" : [ "corporate_client_code", "entity_id" ],
            "properties" : {
              "risk_level" : {
                "minLength" : 3,
                "description" : "The risk-level are; EDD Enhanced due diligence CDD Consumer due diligence SDD Simple due diligence - Mandatory if newly created Corporate",
                "type" : "string",
                "maxLength" : 3,
                "enum" : [ "EDD", "CDD", "SDD" ]
              },
              "enable_outbound_payments" : {
                "minLength" : 4,
                "description" : "true â Make and receive false â Receive only",
                "type" : "string",
                "maxLength" : 5
              },
              "corporate_client_code" : {
                "minLength" : 20,
                "description" : "The corporate client code (unique identifier) of the corporate.",
                "type" : "string",
                "maxLength" : 20
              },
              "limit" : {
                "type" : "object"
              },
              "currency" : {
                "type" : "object"
              },
              "comment" : {
                "minLength" : 1,
                "description" : "KYB comments description",
                "type" : "string",
                "maxLength" : 256
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "status" : {
                "minLength" : 6,
                "description" : "KYB status of the corporate. Status can be 'Passed','Rejected' or 'Pending'.",
                "type" : "string",
                "maxLength" : 8,
                "enum" : [ "Passed", "Rejected", "Pending" ]
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call set a corporates KYB status and risk level on the Bankable platform.",
          "required" : true
        } ],
        "tags" : [ "kyb" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/corporate/kyb-update",
      "parameters" : [ ]
    },
    "/fx/exchange" : {
      "post" : {
        "summary" : "Exchange an amount of a currency from sell side virtual account to the currency of the buy side virtual account.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postFxExchange",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.fx foreign exchange",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postFxExchange",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostFxExchangeResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "sell_currency" : {
                  "minLength" : 3,
                  "description" : "Currency. ISO 3 characters code.",
                  "type" : "string",
                  "maxLength" : 3
                },
                "buy_currency" : {
                  "minLength" : 3,
                  "description" : "Currency. ISO 3 characters code.",
                  "type" : "string",
                  "maxLength" : 3
                },
                "sell_operation_id" : {
                  "type" : "object"
                },
                "buy_operation_id" : {
                  "type" : "object"
                },
                "sell_amount" : {
                  "type" : "object"
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "buy_amount" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Exchanged"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostFxExchangeRequest",
            "type" : "object",
            "required" : [ "amount", "buy_virtual_account_ref", "description", "entity_id", "fix_leg", "sell_virtual_account_ref" ],
            "properties" : {
              "amount" : {
                "type" : "object"
              },
              "fix_leg" : {
                "minLength" : 3,
                "description" : "Leg of the exchange that should be fixed to the amount. Values include BUY or SELL",
                "type" : "string",
                "maxLength" : 4
              },
              "description" : {
                "type" : "object"
              },
              "sell_virtual_account_ref" : {
                "type" : "object"
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "buy_virtual_account_ref" : {
                "type" : "object"
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call exchange an amount of a currency from sell side virtual account to the currency of the buy side virtual account.",
          "required" : true
        } ],
        "tags" : [ "fx foreign exchange" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/fx/exchange",
      "parameters" : [ ]
    },
    "/card/status-block" : {
      "post" : {
        "summary" : "Blocks a card using the specified card_client_code, to identify the card.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardStatusBlock",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card status",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardStatusBlock",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatusBlockResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Blocked"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatusBlockRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id" ],
            "properties" : {
              "block_reason" : {
                "minLength" : 0,
                "description" : "Free text used to provide a reason for the card block. FIS only.",
                "type" : "string",
                "maxLength" : 200
              },
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call blocks a specified card.",
          "required" : true
        } ],
        "tags" : [ "card status" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/status-block",
      "parameters" : [ ]
    },
    "/suspended-payment/return" : {
      "post" : {
        "summary" : "Return inbound payments, which have been suspended due to KYB reasons, back to a physical address on the scheme that they originated from or an account specified by the originator",
        "x-WM-METHOD_NAME" : "BNKAccounts_postSuspendedPaymentReturn",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.kyb",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postSuspendedPaymentReturn",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostSuspendedPaymentReturnResponse",
              "type" : "object",
              "properties" : {
                "reference" : {
                  "type" : "object"
                },
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "amount" : {
                  "minLength" : 1,
                  "description" : "Maximum limit amount for the corporate. Decimal separator \".\" (point). Thousand separator; none.",
                  "type" : "string",
                  "maxLength" : 21
                },
                "currency" : {
                  "minLength" : 3,
                  "description" : "Currency. ISO 3 characters code.",
                  "type" : "string",
                  "maxLength" : 3
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "originator_physical_account_info" : {
                  "type" : "object",
                  "properties" : {
                    "account_number" : {
                      "type" : "object"
                    },
                    "country_code" : {
                      "minLength" : 2,
                      "description" : "Two-character ISO alphabetic code. Examples: FR / GB. If left blank, the country of the client will be used.",
                      "type" : "string",
                      "maxLength" : 2
                    },
                    "beneficiary" : {
                      "minLength" : 1,
                      "description" : "The beneficiary account holder.",
                      "type" : "string",
                      "maxLength" : 200
                    },
                    "address_1" : {
                      "minLength" : 1,
                      "description" : "First line of beneficiary address",
                      "type" : "string",
                      "maxLength" : 70
                    },
                    "account_name" : {
                      "type" : "object"
                    },
                    "iban" : {
                      "minLength" : 0,
                      "description" : "The International Bank Account Number.",
                      "type" : "string",
                      "maxLength" : 34
                    },
                    "address_2" : {
                      "minLength" : 1,
                      "description" : "Second line of beneficiary address",
                      "type" : "string",
                      "maxLength" : 70
                    },
                    "sort_code" : {
                      "type" : "object"
                    },
                    "bic" : {
                      "minLength" : 8,
                      "description" : "The BIC code of the Bank where the account is held.",
                      "type" : "string",
                      "maxLength" : 11
                    }
                  }
                }
              }
            },
            "description" : "Returned"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostSuspendedPaymentReturnRequest",
            "type" : "object",
            "required" : [ "entity_id", "operation_id", "return_account_details", "virtual_account_ref" ],
            "properties" : {
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "return_account_details" : {
                "type" : "object"
              },
              "operation_id" : {
                "type" : "object"
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call return inbound payments, which have been suspended due to KYB reasons, back to a physical address on the scheme that they originated from or an account specified by the originator",
          "required" : true
        } ],
        "tags" : [ "kyb" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/suspended-payment/return",
      "parameters" : [ ]
    },
    "/card/status-stolen" : {
      "post" : {
        "summary" : "Sets the status of a card on the platform to \"STOLEN\".",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardStatusStolen",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card status",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardStatusStolen",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatusStolenResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Updated"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatusStolenRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id" ],
            "properties" : {
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call sets a status of a card to \"STOLEN\".",
          "required" : true
        } ],
        "tags" : [ "card status" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/status-stolen",
      "parameters" : [ ]
    },
    "/direct-debit-mandate/block" : {
      "post" : {
        "summary" : "Blocks a direct debit mandate, when a mandate is blocked all collection requests will be rejected.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postDirectDebitMandateBlock",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.direct debits (Coming to your Sandbox soon!)",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postDirectDebitMandateBlock",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostDirectDebitMandateBlockResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Blocked"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostDirectDebitMandateBlockRequest",
            "type" : "object",
            "required" : [ "client_code", "entity_id", "funding_account_code", "mandate_id", "source" ],
            "properties" : {
              "funding_account_code" : {
                "type" : "object"
              },
              "mandate_id" : {
                "type" : "array",
                "items" : {
                  "minLength" : 50,
                  "description" : "Unique identifier provided by the scheme for the mandates",
                  "type" : "string",
                  "maxLength" : 50
                }
              },
              "source" : {
                "minLength" : 1,
                "description" : "Debtor; DebtorBank (System only setting)",
                "type" : "string",
                "maxLength" : 10
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "client_code" : {
                "type" : "object"
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call blocks a direct debit mandate.",
          "required" : true
        } ],
        "tags" : [ "direct debits (Coming to your Sandbox soon!)" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/direct-debit-mandate/block",
      "parameters" : [ ]
    },
    "/virtual-account/statement" : {
      "post" : {
        "summary" : "Returns a list of all account activity for a given time window and/or a given number of transactions.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postVirtualAccountStatement",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.virtual accounts",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postVirtualAccountStatement",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountStatementResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entries" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "amount" : {
                        "minLength" : 1,
                        "description" : "Maximum limit amount for the corporate. Decimal separator \".\" (point). Thousand separator; none.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "balance_after" : {
                        "type" : "object"
                      },
                      "debit_or_credit" : {
                        "minLength" : 2,
                        "description" : "-1 for debit and +1 for credit.",
                        "type" : "string",
                        "maxLength" : 2,
                        "enum" : [ "-1", "+1" ]
                      },
                      "virtual_account_ref" : {
                        "minLength" : 1,
                        "description" : "Reference ID of the virtual account",
                        "type" : "string",
                        "maxLength" : 20
                      },
                      "description" : {
                        "type" : "object"
                      },
                      "type" : {
                        "format" : "int32",
                        "description" : "Entry Types: 0: Load 1: Unload Adjustment 2: Transfer 3: Fees 4: Card Fee 5: Transfer 6: Unload 7: Funding 8: Reimbursement 9: Dist card fees 10: Load Adjustment 11: Refund 12: Regularisation 13: Monthly fees 14: Annual fees 15: Fee Reversal 16: Card FX fees 19: sepa_transfer_out 20: Client Credit 21: Client Debit 22: Clearing 23: Distributor fee 24: Card Chargeback 25: Chargeback 26: Scheme payment 27: Interchange Received 28: Represent 29: Scheme clearing 30: Interchange Paid 31: Network Fees 32: Card Discharge 34: Block 35: Debit",
                        "type" : "integer"
                      },
                      "entry_date_time" : {
                        "type" : "object"
                      },
                      "reference" : {
                        "type" : "object"
                      },
                      "recipient" : {
                        "minLength" : 1,
                        "description" : "For payments and transfers, this is the virtual account name. For card transactions, this is the card_client_code.",
                        "type" : "string",
                        "maxLength" : 20
                      },
                      "id" : {
                        "minLength" : 15,
                        "description" : "Entry ID",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "bank_operations" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      },
                      "transaction" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "transaction_rrn" : {
                              "minLength" : 1,
                              "description" : "Reference Number",
                              "type" : "string",
                              "maxLength" : 12
                            },
                            "country" : {
                              "minLength" : 2,
                              "description" : "Two-character ISO alphabetic code. Examples: FR / GB. If left blank, the country of the client will be used.",
                              "type" : "string",
                              "maxLength" : 2
                            },
                            "merchant_code" : {
                              "minLength" : 1,
                              "description" : "Merchant Code",
                              "type" : "string",
                              "maxLength" : 15
                            },
                            "original_transaction" : {
                              "type" : "object",
                              "properties" : {
                                "amount" : {
                                  "type" : "object"
                                },
                                "amount_billed" : {
                                  "type" : "object"
                                },
                                "debit_or_credit" : {
                                  "minLength" : 2,
                                  "description" : "-1 for debit and +1 for credit.",
                                  "type" : "string",
                                  "maxLength" : 2,
                                  "enum" : [ "-1", "+1" ]
                                },
                                "fx_rate" : {
                                  "minLength" : 1,
                                  "description" : "The FX rate expressed as amount/amount_billed",
                                  "type" : "string",
                                  "maxLength" : 21
                                }
                              }
                            },
                            "merchant_city" : {
                              "type" : "object"
                            },
                            "auth" : {
                              "minLength" : 1,
                              "description" : "Flag if the transaction has been authorised before the settlement.",
                              "type" : "string",
                              "maxLength" : 1
                            },
                            "description" : {
                              "type" : "object"
                            },
                            "type" : {
                              "format" : "int32",
                              "description" : "The type of the transaction: 0: Internal 1: Purchase 2: ATM Cash 3: Cashback 4: Offline Balance Collection 5: ATM Balance 6: Purchase Reversal 7: ATM Reversal 8: TopUp 9: Transfer 10: Adjustment 11: Refund 12: Reimbursment",
                              "type" : "integer"
                            },
                            "mcc" : {
                              "minLength" : 1,
                              "description" : "Merchant Category Code",
                              "type" : "string",
                              "maxLength" : 4
                            },
                            "proc_date_time" : {
                              "type" : "object"
                            },
                            "id" : {
                              "minLength" : 1,
                              "description" : "Unique id of the transaction. The transaction keeps this id all along its life. The other references can change depending on the status.",
                              "type" : "string",
                              "maxLength" : 20
                            },
                            "transaction_date_time" : {
                              "type" : "object"
                            },
                            "merchant_terminal_id" : {
                              "minLength" : 1,
                              "description" : "Merchant terminal code from ISO message",
                              "type" : "string",
                              "maxLength" : 8
                            },
                            "amount" : {
                              "minLength" : 1,
                              "description" : "Maximum limit amount for the corporate. Decimal separator \".\" (point). Thousand separator; none.",
                              "type" : "string",
                              "maxLength" : 21
                            },
                            "fx_fee_amount" : {
                              "type" : "object"
                            },
                            "settlement_date" : {
                              "type" : "object"
                            },
                            "debit_or_credit" : {
                              "minLength" : 2,
                              "description" : "-1 for debit and +1 for credit.",
                              "type" : "string",
                              "maxLength" : 2,
                              "enum" : [ "-1", "+1" ]
                            },
                            "billing_curr" : {
                              "type" : "object"
                            },
                            "merchant_name" : {
                              "minLength" : 1,
                              "description" : "Merchant Name",
                              "type" : "string",
                              "maxLength" : 22
                            },
                            "reject_description" : {
                              "minLength" : 1,
                              "description" : "In case of declined transaction, reject description if available.",
                              "type" : "string",
                              "maxLength" : 255
                            },
                            "local_date" : {
                              "type" : "object"
                            },
                            "merchant_street" : {
                              "type" : "object"
                            },
                            "fee_amount" : {
                              "type" : "object"
                            },
                            "amount_billed" : {
                              "type" : "object"
                            },
                            "total_amount" : {
                              "type" : "object"
                            },
                            "merchant_state" : {
                              "type" : "object"
                            },
                            "local_date_time" : {
                              "type" : "object"
                            },
                            "merchant_country" : {
                              "type" : "object"
                            },
                            "card_client_code" : {
                              "minLength" : 13,
                              "description" : "Reference id of the card",
                              "type" : "string",
                              "maxLength" : 13
                            },
                            "transaction_curr" : {
                              "minLength" : 3,
                              "description" : "Currency. ISO 3 characters code.",
                              "type" : "string",
                              "maxLength" : 3
                            },
                            "status" : {
                              "format" : "int32",
                              "description" : "The status of the transaction: 0: Pending 1: Settled 2: Declined 3: Reversal 4: Approved 5: Release 6: Dispute 99: Deleted",
                              "type" : "integer"
                            },
                            "transaction_ref" : {
                              "minLength" : 1,
                              "description" : "Reference of the transaction",
                              "type" : "string",
                              "maxLength" : 20
                            }
                          }
                        }
                      },
                      "status" : {
                        "format" : "int32",
                        "description" : "Operation Status: 0: Pending 1: Commit 2: Processing 3: Refused 4: Canceled 5: Template 6: Failed 7: Bulk_Processing",
                        "type" : "integer"
                      }
                    }
                  }
                },
                "nb_entry" : {
                  "format" : "int32",
                  "description" : "Number of entries returned.",
                  "type" : "integer"
                },
                "virtual_account_ref" : {
                  "minLength" : 1,
                  "description" : "Reference ID of the virtual account",
                  "type" : "string",
                  "maxLength" : 20
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Statement Returned"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountStatementRequest",
            "type" : "object",
            "required" : [ "entity_id", "start_date", "virtual_account_ref" ],
            "properties" : {
              "end_date" : {
                "type" : "object"
              },
              "offset" : {
                "format" : "int32",
                "description" : "Start of the selection entry. Statement will be ordered based on the operation date. If count provided, offset must be provided.",
                "type" : "integer"
              },
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "count" : {
                "format" : "int32",
                "description" : "Number of the selection entry. Statement will be ordered based on the operation date. If not set, the complete list will be retrieved. If offset is set, count will be effective.",
                "type" : "integer"
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "start_date" : {
                "type" : "object"
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call returns a statement of all account activity.",
          "required" : true
        } ],
        "tags" : [ "virtual accounts" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/virtual-account/statement",
      "parameters" : [ ]
    },
    "/suspended-payment/release" : {
      "post" : {
        "summary" : "Release inbound payments, which have  been  suspended  due  to  KYB  reasons, back to specified destination account.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postSuspendedPaymentRelease",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.kyb",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postSuspendedPaymentRelease",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostSuspendedPaymentReleaseResponse",
              "type" : "object",
              "properties" : {
                "virtual_account_ref_dst" : {
                  "type" : "object"
                },
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "amount" : {
                  "minLength" : 1,
                  "description" : "Maximum limit amount for the corporate. Decimal separator \".\" (point). Thousand separator; none.",
                  "type" : "string",
                  "maxLength" : 21
                },
                "currency" : {
                  "minLength" : 3,
                  "description" : "Currency. ISO 3 characters code.",
                  "type" : "string",
                  "maxLength" : 3
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "transfer_operation_id" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Released"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostSuspendedPaymentReleaseRequest",
            "type" : "object",
            "required" : [ "description", "entity_id", "operation_id" ],
            "properties" : {
              "description" : {
                "type" : "object"
              },
              "operation_id" : {
                "type" : "object"
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call release inbound payments, which have  been  suspended  due  to  KYB  reasons, back to specified destination account.",
          "required" : true
        } ],
        "tags" : [ "kyb" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/suspended-payment/release",
      "parameters" : [ ]
    },
    "/card/country-block" : {
      "post" : {
        "summary" : "Allows a user/distributor to block a list of countries, preventing any card transactions in the country list",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardCountryBlock",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.geo blocking and restricted countries",
        "produces" : [ "application/json" ],
        "x-WM-OPERATION_TYPE" : "create",
        "operationId" : "BNKAccounts_postCardCountryBlock",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardCountryBlockResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "country_code" : {
                  "type" : "object"
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Blocked"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardCountryBlockRequest",
            "type" : "object",
            "required" : [ "card_client_code", "country_code", "entity_id" ],
            "properties" : {
              "country_code" : {
                "type" : "object"
              },
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call allows a user/distributor to block a list of countries, preventing any card transactions in the country list",
          "required" : true
        } ],
        "tags" : [ "geo blocking and restricted countries" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/country-block",
      "parameters" : [ ]
    },
    "/card/order" : {
      "post" : {
        "summary" : "Order a new card. The response will return the unique reference of the new card if the order was successful. Use pn_card_activate to activate the new card.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardOrder",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card management",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardOrder",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardOrderResponse",
              "type" : "object",
              "properties" : {
                "card_visible_number" : {
                  "minLength" : 11,
                  "description" : "Characters showing part of the PAN (first 4 characters * last 4 characters)",
                  "type" : "string",
                  "maxLength" : 11
                },
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "bureau_del_bulk_code" : {
                  "description" : "Bureau specific bulk code used to group cards for bulk orders at the bureau. This code will appear on the delivered package.",
                  "type" : "string"
                },
                "card_sequence" : {
                  "minLength" : 3,
                  "description" : "If design of the card is asking for sequence, then a 3 digit number will be generated. This number is unique for any card of the card holder.",
                  "type" : "string",
                  "maxLength" : 3
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "card_pan" : {
                  "minLength" : 16,
                  "description" : "16 or 19 digit card number. Only in the response if the card is virtual and the client is authorised to receive this secure data.",
                  "type" : "string",
                  "maxLength" : 19
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "card_exp_date" : {
                  "minLength" : 10,
                  "description" : "The expiry date of the card (format yyyy-mm-dd).",
                  "type" : "string",
                  "maxLength" : 10
                },
                "card_cvc2" : {
                  "minLength" : 3,
                  "description" : "The CVC2 number for the card. Only in the response if the card is virtual and the client is authorised to receive this secure data.",
                  "type" : "string",
                  "maxLength" : 3
                },
                "ch_client_code" : {
                  "minLength" : 1,
                  "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "card_line_4" : {
                  "minLength" : 1,
                  "description" : "Free text field. For line 4 variable data. A regular expression for control will put in place.",
                  "type" : "string",
                  "maxLength" : 30
                },
                "card_name" : {
                  "minLength" : 1,
                  "description" : "The name to appear on the card. If omitted then the card name will be composed by: <first_name><><last_name> or if abbreviation is needed <first letter of first_name><><last_name>. The field length can vary depending on the card design and is also restricted to a maximum of 21 if the provider is Marqeta.",
                  "type" : "string",
                  "maxLength" : 27
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "operation_id" : {
                  "minLength" : 15,
                  "description" : "Bankable reference of the operation.",
                  "type" : "string",
                  "maxLength" : 15
                }
              }
            },
            "description" : "Ordered"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardOrderRequest",
            "type" : "object",
            "required" : [ "card_type", "entity_id", "market_id", "product_id" ],
            "properties" : {
              "load_curr" : {
                "minLength" : 3,
                "description" : "Currency code of the virtual account. ISO 3 characters code. Mandatory if virtual_account_ref is provided but only for virtual cards.",
                "type" : "string",
                "maxLength" : 3
              },
              "expiry_renew" : {
                "format" : "int32",
                "description" : " 0: do not renew at card expiration 1: automatic renewal at card expiration",
                "type" : "integer"
              },
              "profile" : {
                "minLength" : 1,
                "description" : "Profile of limits, velocities, and fees of the virtual account. Not available on all packages.",
                "type" : "string",
                "maxLength" : 20
              },
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "market_id" : {
                "minLength" : 1,
                "description" : "Market reference of the card.",
                "type" : "string",
                "maxLength" : 20
              },
              "wallet_client_code" : {
                "minLength" : 1,
                "description" : "Code of the account to be used to authorise transactions against. The virtual account reference linked to the debit card. Not available on all the markets.",
                "type" : "string",
                "maxLength" : 20
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "card_type" : {
                "minLength" : 1,
                "description" : "V (uppercase V) for virtual P (uppercase P) for physical",
                "type" : "string",
                "maxLength" : 1
              },
              "cardholder" : {
                "type" : "object",
                "properties" : {
                  "delivery_address" : {
                    "type" : "object"
                  },
                  "address" : {
                    "type" : "object"
                  },
                  "gender" : {
                    "minLength" : 1,
                    "description" : "Gender of individual",
                    "type" : "string",
                    "maxLength" : 1,
                    "enum" : [ "M", "F", "S", "X" ]
                  },
                  "date_of_birth" : {
                    "minLength" : 10,
                    "description" : "Date of birth of the individual, formatted yyyy-mm-dd.",
                    "type" : "string",
                    "maxLength" : 10
                  },
                  "mobile_no" : {
                    "minLength" : 1,
                    "description" : "Mandatory for 3D- Secure e-commerce payments. Mobile number of the individual.",
                    "type" : "string",
                    "maxLength" : 20
                  },
                  "last_name" : {
                    "minLength" : 1,
                    "description" : "Contact Last Name or Department",
                    "type" : "string",
                    "maxLength" : 50
                  },
                  "language" : {
                    "minLength" : 2,
                    "description" : "The communication language requested by the consumer following ISO 639-1 language code. E.g. en - English.",
                    "type" : "string",
                    "maxLength" : 2
                  },
                  "tel_no" : {
                    "minLength" : 1,
                    "description" : "The primary household landline telephone number of the consumer.",
                    "type" : "string",
                    "maxLength" : 20
                  },
                  "tel_ext" : {
                    "minLength" : 1,
                    "description" : "Country Code extension for landline telephone number.",
                    "type" : "string",
                    "maxLength" : 5
                  },
                  "miduserid" : {
                    "minLength" : 39,
                    "description" : "Modirum User ID for 3D Secure SDK users",
                    "type" : "string",
                    "maxLength" : 39
                  },
                  "first_name" : {
                    "minLength" : 1,
                    "description" : "Contact First Name or Department",
                    "type" : "string",
                    "maxLength" : 50
                  },
                  "email" : {
                    "minLength" : 1,
                    "description" : "The email address of the individual.",
                    "type" : "string",
                    "maxLength" : 150
                  },
                  "mobile_ext" : {
                    "minLength" : 1,
                    "description" : "Country Code extension for mobile telephone number.",
                    "type" : "string",
                    "maxLength" : 5
                  },
                  "mobile_add" : {
                    "type" : "object",
                    "properties" : {
                      "mobile_no" : {
                        "minLength" : 1,
                        "description" : "Mandatory for 3D- Secure e-commerce payments. Mobile number of the individual.",
                        "type" : "string",
                        "maxLength" : 20
                      },
                      "mobile_ext" : {
                        "minLength" : 1,
                        "description" : "Country Code extension for mobile telephone number.",
                        "type" : "string",
                        "maxLength" : 5
                      }
                    }
                  }
                }
              },
              "ch_client_code" : {
                "minLength" : 1,
                "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                "type" : "string",
                "maxLength" : 50
              },
              "deny_mcc" : {
                "minLength" : 1,
                "description" : "Comma separated list of MCC codes that should be denied. To define a range of MCC, separate the first and last MCC by a minus. Not available on all the markets",
                "type" : "string",
                "maxLength" : 192
              },
              "load_amount" : {
                "minLength" : 1,
                "description" : "Amount from the virtual account to load onto the card. Decimal separator: \".\" (point) Thousand separator: none Mandatory if virtual_account_ref is provided. Only for Virtual Cards",
                "type" : "string",
                "maxLength" : 21
              },
              "card_line_4" : {
                "minLength" : 1,
                "description" : "Free text field. For line 4 variable data. A regular expression for control will put in place.",
                "type" : "string",
                "maxLength" : 30
              },
              "validity_months" : {
                "type" : "object"
              },
              "design_id" : {
                "minLength" : 1,
                "description" : "The card design reference of the card that is being created. The relevant designs will be provided by Bankable.",
                "type" : "string",
                "maxLength" : 20
              },
              "new_pin" : {
                "type" : "object"
              },
              "corporate_id" : {
                "minLength" : 1,
                "description" : "Corporate Identity. If set, the future virtual account will be attached to the corporate. Otherwise, it will be attached to the default coporate of the distributor. Every virtual account that gets created will be associated to a corporate Identity.",
                "type" : "string",
                "maxLength" : 20
              },
              "product_id" : {
                "minLength" : 1,
                "description" : "Product reference",
                "type" : "string",
                "maxLength" : 50
              },
              "card_name" : {
                "minLength" : 1,
                "description" : "The name to appear on the card. If omitted then the card name will be composed by: <first_name><><last_name> or if abbreviation is needed <first letter of first_name><><last_name>. The field length can vary depending on the card design and is also restricted to a maximum of 21 if the provider is Marqeta.",
                "type" : "string",
                "maxLength" : 27
              },
              "deny_service" : {
                "minLength" : 1,
                "description" : "Comma separated list of services (authorisation transaction types) that should be denied for the card: 0 - Sale (Goods & services) 1 - Cash 9 - Sale with cashback Not available on all markets",
                "type" : "string",
                "maxLength" : 100
              },
              "image_id" : {
                "minLength" : 1,
                "description" : "ID of a predefined image",
                "type" : "string",
                "maxLength" : 16
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call orders a new card",
          "required" : true
        } ],
        "tags" : [ "card management" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/order",
      "parameters" : [ ]
    },
    "/card/balance" : {
      "post" : {
        "summary" : "Returns the balance information of an active card.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardBalance",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card financial",
        "produces" : [ "application/json" ],
        "x-WM-OPERATION_TYPE" : "create",
        "operationId" : "BNKAccounts_postCardBalance",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardBalanceResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "balances" : {
                  "type" : "object",
                  "properties" : {
                    "product_id" : {
                      "minLength" : 15,
                      "description" : "Bankable reference of the operation.",
                      "type" : "string",
                      "maxLength" : 15
                    },
                    "card_available_amount" : {
                      "type" : "object"
                    },
                    "card_pending_amount" : {
                      "type" : "object"
                    },
                    "card_curr" : {
                      "minLength" : 3,
                      "description" : "Currency. ISO 3 characters code.",
                      "type" : "string",
                      "maxLength" : 3
                    },
                    "card_balance" : {
                      "type" : "object"
                    }
                  }
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Executed"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardBalanceRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id" ],
            "properties" : {
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call returns the balance information of an active card.",
          "required" : true
        } ],
        "tags" : [ "card financial" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/balance",
      "parameters" : [ ]
    },
    "/suspended-payment/info" : {
      "post" : {
        "summary" : "Retrieve a list of all inbound payments for a distributor that have been suspended for reasons such as - a KYB breach.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postSuspendedPaymentInfo",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.kyb",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postSuspendedPaymentInfo",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostSuspendedPaymentInfoResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "suspended_payments" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "reference" : {
                        "minLength" : 1,
                        "description" : "Reference of the inbound suspended payment",
                        "type" : "string",
                        "maxLength" : 200
                      },
                      "reason" : {
                        "type" : "object"
                      },
                      "amount" : {
                        "type" : "object"
                      },
                      "date_time" : {
                        "type" : "object"
                      },
                      "corporate_client_code" : {
                        "type" : "object"
                      },
                      "virtual_account_ref" : {
                        "type" : "object"
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      },
                      "payer_physical_account_info" : {
                        "type" : "object",
                        "properties" : {
                          "account_number" : {
                            "type" : "object"
                          },
                          "country_code" : {
                            "minLength" : 2,
                            "description" : "Two-character ISO alphabetic code. Examples: FR / GB. If left blank, the country of the client will be used.",
                            "type" : "string",
                            "maxLength" : 2
                          },
                          "beneficiary" : {
                            "minLength" : 1,
                            "description" : "The beneficiary account holder.",
                            "type" : "string",
                            "maxLength" : 200
                          },
                          "address_1" : {
                            "minLength" : 1,
                            "description" : "First line of beneficiary address",
                            "type" : "string",
                            "maxLength" : 70
                          },
                          "account_name" : {
                            "type" : "object"
                          },
                          "iban" : {
                            "minLength" : 0,
                            "description" : "The International Bank Account Number.",
                            "type" : "string",
                            "maxLength" : 34
                          },
                          "address_2" : {
                            "minLength" : 1,
                            "description" : "Second line of beneficiary address",
                            "type" : "string",
                            "maxLength" : 70
                          },
                          "sort_code" : {
                            "type" : "object"
                          },
                          "bic" : {
                            "minLength" : 8,
                            "description" : "The BIC code of the Bank where the account is held.",
                            "type" : "string",
                            "maxLength" : 11
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description" : "Retrieved"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostSuspendedPaymentInfoRequest",
            "type" : "object",
            "required" : [ "entity_id" ],
            "properties" : {
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call retrieve a list of all inbound payments for a distributor that have been suspended for reasons such as - a KYB breach.",
          "required" : true
        } ],
        "tags" : [ "kyb" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/suspended-payment/info",
      "parameters" : [ ]
    },
    "/card/status-cancel" : {
      "post" : {
        "summary" : "Sets the status of a card on the platform to \"CANCEL\".",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardStatusCancel",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.card status",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardStatusCancel",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatusCancelResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "card_client_code" : {
                  "minLength" : 13,
                  "description" : "Reference id of the card",
                  "type" : "string",
                  "maxLength" : 13
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Updated"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardStatusCancelRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id" ],
            "properties" : {
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call sets a status of a card to \"CANCEL\".",
          "required" : true
        } ],
        "tags" : [ "card status" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/status-cancel",
      "parameters" : [ ]
    },
    "/region/info" : {
      "post" : {
        "summary" : "Retrieves the information of a previously created region, by region_name or region_code. NOTE: Using region_name may result in more than one set of region_information being returned.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postRegionInfo",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.limits",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postRegionInfo",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostRegionInfoResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "region_details" : {
                  "type" : "object",
                  "properties" : {
                    "country" : {
                      "minLength" : 2,
                      "description" : "Country to be provided in ISO format like FR,GB,NL.",
                      "type" : "string",
                      "maxLength" : 2
                    },
                    "region_name" : {
                      "minLength" : 1,
                      "description" : "Name of the region.",
                      "type" : "string",
                      "maxLength" : 45
                    },
                    "region_code" : {
                      "minLength" : 4,
                      "description" : "Region code (group of countries) to which the limit rules are to be applied. Must be present if no country is specified.",
                      "type" : "string",
                      "maxLength" : 22
                    }
                  }
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Returned"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostRegionInfoRequest",
            "type" : "object",
            "required" : [ "entity_id", "region_code", "region_name" ],
            "properties" : {
              "region_name" : {
                "type" : "object"
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "region_code" : {
                "type" : "object"
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call returns the information on a region.",
          "required" : true
        } ],
        "tags" : [ "limits" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/region/info",
      "parameters" : [ ]
    },
    "/card/country-info" : {
      "post" : {
        "summary" : "Return the block, active and restricted status for all countries for a card.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postCardCountryInfo",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.geo blocking and restricted countries",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postCardCountryInfo",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardCountryInfoResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "blocked" : {
                  "type" : "object"
                },
                "restricted" : {
                  "type" : "object"
                },
                "active" : {
                  "type" : "object"
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Status returned"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostCardCountryInfoRequest",
            "type" : "object",
            "required" : [ "card_client_code", "entity_id" ],
            "properties" : {
              "card_client_code" : {
                "minLength" : 13,
                "description" : "Reference id of the card",
                "type" : "string",
                "maxLength" : 13
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call return the block, active and restricted status for all countries for a card.",
          "required" : true
        } ],
        "tags" : [ "geo blocking and restricted countries" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/card/country-info",
      "parameters" : [ ]
    },
    "/direct-debit/refusal" : {
      "post" : {
        "summary" : "Refuse a direct debit collection request. A refusal must be recieved on the day before collection.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postDirectDebitRefusal",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.direct debits (Coming to your Sandbox soon!)",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postDirectDebitRefusal",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostDirectDebitRefusalResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "reject_reason" : {
                  "minLength" : 1,
                  "description" : "String describing why the refund request was rejected. E.g. \"Mandate Not Found\", \"Transaction Not Found\", \"Transaction older than 13 months\".",
                  "type" : "string",
                  "maxLength" : 100
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                },
                "status" : {
                  "minLength" : 1,
                  "description" : "Indication of whether the request was valid (true) or invalid (false)",
                  "type" : "string",
                  "maxLength" : 1
                }
              }
            },
            "description" : "Refused"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostDirectDebitRefusalRequest",
            "type" : "object",
            "required" : [ "client_code", "entity_id", "mandate_id", "transaction_id" ],
            "properties" : {
              "transaction_id" : {
                "type" : "object"
              },
              "mandate_id" : {
                "type" : "object"
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "client_code" : {
                "type" : "object"
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call refuses a direct debit collection.",
          "required" : true
        } ],
        "tags" : [ "direct debits (Coming to your Sandbox soon!)" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/direct-debit/refusal",
      "parameters" : [ ]
    },
    "/iban/consumer-add" : {
      "post" : {
        "summary" : "Assigns additional consumers to jointly own an already created virtual account, specified by IBAN.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postIbanConsumerAdd",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.IBAN Management",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postIbanConsumerAdd",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostIbanConsumerAddResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Added"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostIbanConsumerAddRequest",
            "type" : "object",
            "required" : [ "bic", "ch_client_code", "entity_id", "iban" ],
            "properties" : {
              "iban" : {
                "minLength" : 0,
                "description" : "The International Bank Account Number.",
                "type" : "string",
                "maxLength" : 34
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              },
              "bic" : {
                "minLength" : 8,
                "description" : "The BIC code of the Bank where the account is held.",
                "type" : "string",
                "maxLength" : 11
              },
              "ch_client_code" : {
                "minLength" : 1,
                "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                "type" : "string",
                "maxLength" : 50
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call assigns an additional consumer to an already created virtual account.",
          "required" : true
        } ],
        "tags" : [ "IBAN Management" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/iban/consumer-add",
      "parameters" : [ ]
    },
    "/virtual-account/status-cancel" : {
      "post" : {
        "summary" : "Cancel a virtual account.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postVirtualAccountStatusCancel",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.virtual accounts",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postVirtualAccountStatusCancel",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountStatusCancelResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "virtual_account_ref" : {
                  "minLength" : 1,
                  "description" : "Reference ID of the virtual account",
                  "type" : "string",
                  "maxLength" : 20
                },
                "fee_details" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee_amount" : {
                        "minLength" : 1,
                        "description" : "Amount of the fee.",
                        "type" : "string",
                        "maxLength" : 21
                      },
                      "description" : {
                        "minLength" : 1,
                        "description" : "Fee description in natural language",
                        "type" : "string",
                        "maxLength" : 100
                      },
                      "operation_id" : {
                        "minLength" : 15,
                        "description" : "Bankable reference of the operation.",
                        "type" : "string",
                        "maxLength" : 15
                      },
                      "currency_code" : {
                        "minLength" : 3,
                        "description" : "Currency. ISO 3 characters code.",
                        "type" : "string",
                        "maxLength" : 3
                      }
                    }
                  }
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Cancelled"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountStatusCancelRequest",
            "type" : "object",
            "required" : [ "entity_id", "virtual_account_ref" ],
            "properties" : {
              "virtual_account_ref" : {
                "minLength" : 1,
                "description" : "Reference ID of the virtual account",
                "type" : "string",
                "maxLength" : 20
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call cancels a virtual account.",
          "required" : true
        } ],
        "tags" : [ "virtual accounts" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/virtual-account/status-cancel",
      "parameters" : [ ]
    },
    "/virtual-account/profile-apply" : {
      "post" : {
        "summary" : "Change the profile associated with a card holder or account. No changes are made to the profile during an upgrade. All accumulators are reset during an upgrade.",
        "x-WM-METHOD_NAME" : "BNKAccounts_postVirtualAccountProfileApply",
        "x-WM-CRUD_OPERATION_ID" : "BNKAccounts.limits",
        "produces" : [ "application/json" ],
        "operationId" : "BNKAccounts_postVirtualAccountProfileApply",
        "responses" : {
          "200" : {
            "schema" : {
              "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountProfileApplyResponse",
              "type" : "object",
              "properties" : {
                "request" : {
                  "minLength" : 1,
                  "description" : "The command that was requested",
                  "type" : "string",
                  "maxLength" : 50
                },
                "transac_id" : {
                  "minLength" : 15,
                  "description" : "Unique id of the request",
                  "type" : "string",
                  "maxLength" : 15
                },
                "entity_id" : {
                  "minLength" : 1,
                  "description" : "Identity of the client",
                  "type" : "string",
                  "maxLength" : 100
                }
              }
            },
            "description" : "Upgraded"
          }
        },
        "parameters" : [ {
          "in" : "header",
          "name" : "Signature",
          "type" : "string",
          "required" : true
        }, {
          "schema" : {
            "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.BnkaccountsPostVirtualAccountProfileApplyRequest",
            "type" : "object",
            "required" : [ "entity_id", "profile_upgrades" ],
            "properties" : {
              "profile_upgrades" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "new_profile_code" : {
                      "minLength" : 1,
                      "description" : "Profile of limits, velocities, and fees of the virtual account. Not available on all packages.",
                      "type" : "string",
                      "maxLength" : 20
                    },
                    "virtual_account_ref" : {
                      "minLength" : 1,
                      "description" : "Reference ID of the virtual account",
                      "type" : "string",
                      "maxLength" : 20
                    },
                    "ch_client_code" : {
                      "minLength" : 1,
                      "description" : "Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.",
                      "type" : "string",
                      "maxLength" : 50
                    }
                  }
                }
              },
              "entity_id" : {
                "minLength" : 1,
                "description" : "Identity of the client",
                "type" : "string",
                "maxLength" : 100
              }
            }
          },
          "in" : "body",
          "name" : "body",
          "description" : "A successful call changes the profile associated with an account or card holder.",
          "required" : false
        } ],
        "tags" : [ "limits" ],
        "consumes" : [ "application/json" ]
      },
      "x-WM-COMPLETE_PATH" : "${rest.BNKAccounts.scheme}://${rest.BNKAccounts.host}${rest.BNKAccounts.basepath}/virtual-account/profile-apply",
      "parameters" : [ ]
    }
  },
  "host" : "${rest.BNKAccounts.host}",
  "schemes" : [ "${rest.BNKAccounts.scheme}" ],
  "swagger" : "2.0",
  "info" : {
    "x-WM-USE_PROXY_FOR_WEB" : true,
    "x-WM-USE_PROXY_FOR_MOBILE" : true,
    "description" : "Bankable API description",
    "x-WM-SERVICE_ID" : "BNKAccounts",
    "title" : "Bankable API",
    "version" : "2.0.0",
    "x-WM-SERVICE_TYPE" : "OpenAPIService",
    "x-WM-USE_WITH_CREDENTIALS" : false
  },
  "tags" : [ {
    "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.card financial",
    "name" : "card financial"
  }, {
    "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.card management",
    "name" : "card management"
  }, {
    "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.card status",
    "name" : "card status"
  }, {
    "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.cards prepaid (Coming to your Sandbox soon!)",
    "name" : "cards prepaid (Coming to your Sandbox soon!)"
  }, {
    "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.consumer",
    "name" : "consumer"
  }, {
    "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.core",
    "name" : "core"
  }, {
    "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.corporate",
    "name" : "corporate"
  }, {
    "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.corporates",
    "name" : "corporates"
  }, {
    "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.direct debits (Coming to your Sandbox soon!)",
    "name" : "direct debits (Coming to your Sandbox soon!)"
  }, {
    "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.fx foreign exchange",
    "name" : "fx foreign exchange"
  }, {
    "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.geo blocking and restricted countries",
    "name" : "geo blocking and restricted countries"
  }, {
    "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.IBAN Management",
    "name" : "IBAN Management"
  }, {
    "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.kyb",
    "name" : "kyb"
  }, {
    "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.limits",
    "name" : "limits"
  }, {
    "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.simulation",
    "name" : "simulation"
  }, {
    "x-WM-FULLY_QUALIFIED_NAME" : "com.create_account.BNKAccounts.virtual accounts",
    "name" : "virtual accounts"
  } ]
}
