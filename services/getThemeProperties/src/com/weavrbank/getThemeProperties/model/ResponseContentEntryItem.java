/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.weavrbank.getThemeProperties.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.weavrbank.getThemeProperties.model.ResponseCssproperty;
import com.weavrbank.getThemeProperties.model.ResponseThemetype;
/**
 * ResponseContentEntryItem
 */

public class ResponseContentEntryItem {
  @JsonProperty("csspropertyId")
  private Integer csspropertyId = null;

  @JsonProperty("cssproperty")
  private ResponseCssproperty cssproperty = null;

  @JsonProperty("cssvalue")
  private String cssvalue = null;

  @JsonProperty("themetype")
  private ResponseThemetype themetype = null;

  @JsonProperty("themetypeId")
  private Integer themetypeId = null;

  @JsonProperty("id")
  private Integer id = null;

  public ResponseContentEntryItem csspropertyId(Integer csspropertyId) {
    this.csspropertyId = csspropertyId;
    return this;
  }

   /**
   * Get csspropertyId
   * @return csspropertyId
  **/
  public Integer getCsspropertyId() {
    return csspropertyId;
  }

  public void setCsspropertyId(Integer csspropertyId) {
    this.csspropertyId = csspropertyId;
  }

  public ResponseContentEntryItem cssproperty(ResponseCssproperty cssproperty) {
    this.cssproperty = cssproperty;
    return this;
  }

   /**
   * Get cssproperty
   * @return cssproperty
  **/
  public ResponseCssproperty getCssproperty() {
    return cssproperty;
  }

  public void setCssproperty(ResponseCssproperty cssproperty) {
    this.cssproperty = cssproperty;
  }

  public ResponseContentEntryItem cssvalue(String cssvalue) {
    this.cssvalue = cssvalue;
    return this;
  }

   /**
   * Get cssvalue
   * @return cssvalue
  **/
  public String getCssvalue() {
    return cssvalue;
  }

  public void setCssvalue(String cssvalue) {
    this.cssvalue = cssvalue;
  }

  public ResponseContentEntryItem themetype(ResponseThemetype themetype) {
    this.themetype = themetype;
    return this;
  }

   /**
   * Get themetype
   * @return themetype
  **/
  public ResponseThemetype getThemetype() {
    return themetype;
  }

  public void setThemetype(ResponseThemetype themetype) {
    this.themetype = themetype;
  }

  public ResponseContentEntryItem themetypeId(Integer themetypeId) {
    this.themetypeId = themetypeId;
    return this;
  }

   /**
   * Get themetypeId
   * @return themetypeId
  **/
  public Integer getThemetypeId() {
    return themetypeId;
  }

  public void setThemetypeId(Integer themetypeId) {
    this.themetypeId = themetypeId;
  }

  public ResponseContentEntryItem id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseContentEntryItem Response_contentEntryItem = (ResponseContentEntryItem) o;
    return Objects.equals(this.csspropertyId, Response_contentEntryItem.csspropertyId) &&
        Objects.equals(this.cssproperty, Response_contentEntryItem.cssproperty) &&
        Objects.equals(this.cssvalue, Response_contentEntryItem.cssvalue) &&
        Objects.equals(this.themetype, Response_contentEntryItem.themetype) &&
        Objects.equals(this.themetypeId, Response_contentEntryItem.themetypeId) &&
        Objects.equals(this.id, Response_contentEntryItem.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(csspropertyId, cssproperty, cssvalue, themetype, themetypeId, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseContentEntryItem {\n");
    
    sb.append("    csspropertyId: ").append(toIndentedString(csspropertyId)).append("\n");
    sb.append("    cssproperty: ").append(toIndentedString(cssproperty)).append("\n");
    sb.append("    cssvalue: ").append(toIndentedString(cssvalue)).append("\n");
    sb.append("    themetype: ").append(toIndentedString(themetype)).append("\n");
    sb.append("    themetypeId: ").append(toIndentedString(themetypeId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
