/*
 * Weavr Multi Product API
 * Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed.   <!-- ReDoc-Inject: <security-definitions> --> 
 *
 * OpenAPI spec version: 3.29.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.weavrbank.weavrLogin.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * ManagedAccountIBANBankAccountDetails
 */

public class ManagedAccountIBANBankAccountDetails {
  @JsonProperty("beneficiaryBank")
  private String beneficiaryBank = null;

  @JsonProperty("beneficiaryNameAndSurname")
  private String beneficiaryNameAndSurname = null;

  @JsonProperty("paymentReference")
  private String paymentReference = null;

  @JsonProperty("beneficiaryBankAddress")
  private String beneficiaryBankAddress = null;

  @JsonProperty("details")
  private Object details = null;

  public ManagedAccountIBANBankAccountDetails beneficiaryBank(String beneficiaryBank) {
    this.beneficiaryBank = beneficiaryBank;
    return this;
  }

   /**
   * The beneficiary bank name to be used when initiating a deposit onto the IBAN.
   * @return beneficiaryBank
  **/
  public String getBeneficiaryBank() {
    return beneficiaryBank;
  }

  public void setBeneficiaryBank(String beneficiaryBank) {
    this.beneficiaryBank = beneficiaryBank;
  }

  public ManagedAccountIBANBankAccountDetails beneficiaryNameAndSurname(String beneficiaryNameAndSurname) {
    this.beneficiaryNameAndSurname = beneficiaryNameAndSurname;
    return this;
  }

   /**
   * The beneficiary name and surname details to be used when initiating a deposit onto the IBAN.
   * @return beneficiaryNameAndSurname
  **/
  public String getBeneficiaryNameAndSurname() {
    return beneficiaryNameAndSurname;
  }

  public void setBeneficiaryNameAndSurname(String beneficiaryNameAndSurname) {
    this.beneficiaryNameAndSurname = beneficiaryNameAndSurname;
  }

  public ManagedAccountIBANBankAccountDetails paymentReference(String paymentReference) {
    this.paymentReference = paymentReference;
    return this;
  }

   /**
   * A reference required by the partner bank to execute a deposit on the managed account.   If provided, make sure that this is included as part of the wire transfer details when initiating a deposit. 
   * @return paymentReference
  **/
  public String getPaymentReference() {
    return paymentReference;
  }

  public void setPaymentReference(String paymentReference) {
    this.paymentReference = paymentReference;
  }

  public ManagedAccountIBANBankAccountDetails beneficiaryBankAddress(String beneficiaryBankAddress) {
    this.beneficiaryBankAddress = beneficiaryBankAddress;
    return this;
  }

   /**
   * The beneficiary bank address to be used when initiating a deposit onto the IBAN.
   * @return beneficiaryBankAddress
  **/
  public String getBeneficiaryBankAddress() {
    return beneficiaryBankAddress;
  }

  public void setBeneficiaryBankAddress(String beneficiaryBankAddress) {
    this.beneficiaryBankAddress = beneficiaryBankAddress;
  }

  public ManagedAccountIBANBankAccountDetails details(Object details) {
    this.details = details;
    return this;
  }

   /**
   * The bank details required to initiate a deposit on the managed account.  The details required to deposit on the IBAN vary depending on the wire transfer channel that will be used. 
   * @return details
  **/
  public Object getDetails() {
    return details;
  }

  public void setDetails(Object details) {
    this.details = details;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagedAccountIBANBankAccountDetails ManagedAccountIBAN_bankAccountDetails = (ManagedAccountIBANBankAccountDetails) o;
    return Objects.equals(this.beneficiaryBank, ManagedAccountIBAN_bankAccountDetails.beneficiaryBank) &&
        Objects.equals(this.beneficiaryNameAndSurname, ManagedAccountIBAN_bankAccountDetails.beneficiaryNameAndSurname) &&
        Objects.equals(this.paymentReference, ManagedAccountIBAN_bankAccountDetails.paymentReference) &&
        Objects.equals(this.beneficiaryBankAddress, ManagedAccountIBAN_bankAccountDetails.beneficiaryBankAddress) &&
        Objects.equals(this.details, ManagedAccountIBAN_bankAccountDetails.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(beneficiaryBank, beneficiaryNameAndSurname, paymentReference, beneficiaryBankAddress, details);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagedAccountIBANBankAccountDetails {\n");
    
    sb.append("    beneficiaryBank: ").append(toIndentedString(beneficiaryBank)).append("\n");
    sb.append("    beneficiaryNameAndSurname: ").append(toIndentedString(beneficiaryNameAndSurname)).append("\n");
    sb.append("    paymentReference: ").append(toIndentedString(paymentReference)).append("\n");
    sb.append("    beneficiaryBankAddress: ").append(toIndentedString(beneficiaryBankAddress)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
